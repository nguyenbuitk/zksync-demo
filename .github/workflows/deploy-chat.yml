name: Deploy from Chat

on:
  deployment:

defaults:
  run:
    shell: bash -leo pipefail {0}

# Disable simultaneous deployments into a single environment
concurrency: deploy-chat-${{ github.event.inputs.environment }}

jobs:
  setup:
    name: Setup
    runs-on: [k8s, stage]
    outputs:
      image_tag: ${{ steps.set.outputs.shortRev }}
      config_tag: ${{ steps.latest.outputs.tag }}  
    steps:
      - uses: actions/checkout@v2
      -
        uses: actions-ecosystem/action-regex-match@v2
        id: regex
        with:
          text: ${{ github.event.deployment.ref }}
          regex: '^(v\d+\.\d+\.\d+)(-r\d+)?$'
      -
        uses: dysnix/find-latest-tag@v1
        if: steps.regex.outputs.match != ''
        id: latest
        with:
          regex: ${{ steps.regex.outputs.group1 }}(-r\d+)?
          token: ${{ secrets.GH_TOKEN }}
          repository: matter-labs/configs
      -
        id: set
        run: |
          echo "::set-output name=shortRev::$(git rev-parse --short HEAD)"
      -
        name: Check tag matches pattern
        if: steps.regex.outputs.match == ''
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ github.token }}
          state: failure
          deployment_id: ${{ github.event.deployment.id }}
      -
        if: steps.regex.outputs.match == ''
        run: |
          echo "::error::Provided ref/tag doesn't match pattern!"
          exit 1

  deploy:
    name: Deploy environment
    runs-on: [k8s, stage]
    needs: [setup]
    steps:
      - name: Deploy
        uses: aurelien-baudet/workflow-dispatch@v2
        with:
          workflow: Deploy
          token: ${{ secrets.GH_TOKEN }}
          wait-for-completion-timeout: 10m
          wait-for-completion-interval: 1m
          inputs: |
            {
              "environment": "${{ github.event.deployment.environment }}",
              "image_tag": "${{ needs.setup.outputs.image_tag }}",
              "config_ref": "${{ needs.setup.outputs.config_tag }}",
              "deployment_id": "${{ github.event.deployment.id }}"
            }
