{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "accounts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositToSC",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ethAmouth",
          "type": "uint256"
        }
      ],
      "name": "getConversionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntranceFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getListAccountAndBalaces",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdEntryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/SimpleBank.sol",
    "1": "interfaces/AggregatorV3Interface.sol"
  },
  "ast": {
    "absolutePath": "contracts/SimpleBank.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        389
      ],
      "SimpleBank": [
        343
      ]
    },
    "id": 344,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".6",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:0"
      },
      {
        "absolutePath": "interfaces/AggregatorV3Interface.sol",
        "file": "interfaces/AggregatorV3Interface.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 344,
        "sourceUnit": 390,
        "src": "64:46:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SimpleBank",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 343,
        "linearizedBaseContracts": [
          343
        ],
        "name": "SimpleBank",
        "nameLocation": "121:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "144:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 343,
            "src": "136:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "136:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "f2a40db8",
            "id": 7,
            "mutability": "mutable",
            "name": "accounts",
            "nameLocation": "170:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 343,
            "src": "153:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 5,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "153:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 6,
              "nodeType": "ArrayTypeName",
              "src": "153:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "88ab139a",
            "id": 9,
            "mutability": "mutable",
            "name": "usdEntryFee",
            "nameLocation": "197:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 343,
            "src": "182:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "182:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "741bef1a",
            "id": 12,
            "mutability": "mutable",
            "name": "priceFeed",
            "nameLocation": "241:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 343,
            "src": "212:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$389",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 11,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 389,
                "src": "212:21:0"
              },
              "referencedDeclaration": 389,
              "src": "212:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$389",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27e235e3",
            "id": 16,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "289:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 343,
            "src": "254:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 15,
              "keyType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "262:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "254:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 14,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "273:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 39,
              "nodeType": "Block",
              "src": "341:113:0",
              "statements": [
                {
                  "expression": {
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "347:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$389",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 23,
                          "name": "_priceFeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "381:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 22,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "359:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$389_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 24,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "359:33:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$389",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "347:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$389",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "347:45:0"
                },
                {
                  "expression": {
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "398:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 28,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "406:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "406:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "398:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "398:18:0"
                },
                {
                  "expression": {
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 32,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "422:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 35,
                      "indexExpression": {
                        "expression": {
                          "id": 33,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "431:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "431:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "422:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31303030",
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "445:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "422:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "422:27:0"
                }
              ]
            },
            "id": 40,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "mutability": "mutable",
                  "name": "_priceFeed",
                  "nameLocation": "322:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "314:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "313:20:0"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "341:0:0"
            },
            "scope": 343,
            "src": "302:152:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "514:194:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 48,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "528:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 51,
                          "indexExpression": {
                            "expression": {
                              "id": 49,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "537:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "537:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "528:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 52,
                          "name": "amt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "552:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "528:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f7567682062616c616e636573",
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "557:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_621fbb83814e3105787b25ef8d72a61cc8cfbdca48f3e4f2ac07fb962ee37cef",
                          "typeString": "literal_string \"not enough balances\""
                        },
                        "value": "not enough balances"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_621fbb83814e3105787b25ef8d72a61cc8cfbdca48f3e4f2ac07fb962ee37cef",
                          "typeString": "literal_string \"not enough balances\""
                        }
                      ],
                      "id": 47,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "520:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "520:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "520:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 58,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "593:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "593:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 60,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "607:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "593:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f7567682062616c616e636573",
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "617:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_621fbb83814e3105787b25ef8d72a61cc8cfbdca48f3e4f2ac07fb962ee37cef",
                          "typeString": "literal_string \"not enough balances\""
                        },
                        "value": "not enough balances"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_621fbb83814e3105787b25ef8d72a61cc8cfbdca48f3e4f2ac07fb962ee37cef",
                          "typeString": "literal_string \"not enough balances\""
                        }
                      ],
                      "id": 57,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "585:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "585:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "585:54:0"
                },
                {
                  "expression": {
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 65,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "645:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 68,
                      "indexExpression": {
                        "expression": {
                          "id": 66,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "654:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "654:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "645:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 69,
                      "name": "amt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "669:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "645:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "645:27:0"
                },
                {
                  "expression": {
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 72,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "678:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 74,
                      "indexExpression": {
                        "id": 73,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "687:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "678:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 75,
                      "name": "amt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "700:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "678:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "678:25:0"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 79,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "467:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "484:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "476:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "amt",
                  "nameLocation": "502:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "494:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "475:31:0"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "514:0:0"
            },
            "scope": 343,
            "src": "458:250:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "802:226:0",
              "statements": [
                {
                  "assignments": [
                    92
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92,
                      "mutability": "mutable",
                      "name": "balanceOfAccount",
                      "nameLocation": "825:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 127,
                      "src": "808:33:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 90,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "808:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 91,
                        "nodeType": "ArrayTypeName",
                        "src": "808:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 96,
                          "name": "accounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "858:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "858:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "844:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 93,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "848:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 94,
                        "nodeType": "ArrayTypeName",
                        "src": "848:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "844:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "808:66:0"
                },
                {
                  "body": {
                    "id": 121,
                    "nodeType": "Block",
                    "src": "926:58:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 111,
                              "name": "balanceOfAccount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "934:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 113,
                            "indexExpression": {
                              "id": 112,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "951:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "934:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 114,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "956:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 118,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 115,
                                "name": "accounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7,
                                "src": "965:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 117,
                              "indexExpression": {
                                "id": 116,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101,
                                "src": "974:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "965:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "956:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "934:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 120,
                        "nodeType": "ExpressionStatement",
                        "src": "934:43:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 104,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "900:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 105,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "904:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "904:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "900:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 122,
                  "initializationExpression": {
                    "assignments": [
                      101
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "892:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 122,
                        "src": "884:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "884:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 103,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "896:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "884:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "922:3:0",
                      "subExpression": {
                        "id": 108,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101,
                        "src": "922:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 110,
                    "nodeType": "ExpressionStatement",
                    "src": "922:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "880:104:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 123,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "997:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "id": 124,
                        "name": "balanceOfAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "1006:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "id": 125,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "996:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_storage_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(address[] storage ref,uint256[] memory)"
                    }
                  },
                  "functionReturnParameters": 87,
                  "id": 126,
                  "nodeType": "Return",
                  "src": "989:34:0"
                }
              ]
            },
            "functionSelector": "7b428ed5",
            "id": 128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getListAccountAndBalaces",
            "nameLocation": "721:24:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "745:2:0"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "768:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 81,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "768:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 82,
                    "nodeType": "ArrayTypeName",
                    "src": "768:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "785:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 84,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "785:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 85,
                    "nodeType": "ArrayTypeName",
                    "src": "785:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "767:35:0"
            },
            "scope": 343,
            "src": "712:316:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 202,
              "nodeType": "Block",
              "src": "1069:521:0",
              "statements": [
                {
                  "assignments": [
                    132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 132,
                      "mutability": "mutable",
                      "name": "flag",
                      "nameLocation": "1080:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 202,
                      "src": "1075:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 131,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1075:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 134,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1087:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1075:13:0"
                },
                {
                  "assignments": [
                    136
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 136,
                      "mutability": "mutable",
                      "name": "minimumUSD",
                      "nameLocation": "1102:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 202,
                      "src": "1094:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 135,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1094:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 142,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_50000000000000000000_by_1",
                      "typeString": "int_const 50000000000000000000"
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3530",
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1115:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1120:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "3138",
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1124:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "src": "1120:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "1115:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_50000000000000000000_by_1",
                      "typeString": "int_const 50000000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1094:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 145,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1165:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "1165:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 144,
                            "name": "getConversionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 246,
                            "src": "1147:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1147:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 148,
                          "name": "minimumUSD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 136,
                          "src": "1179:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1147:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206e65656420746f20646f6e617465206d6f72652045544821",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1197:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6c2563d18a4842a8ed9ddc1b3ef5036dc81f64cd66d7c604feadd8b29d15055",
                          "typeString": "literal_string \"You need to donate more ETH!\""
                        },
                        "value": "You need to donate more ETH!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6c2563d18a4842a8ed9ddc1b3ef5036dc81f64cd66d7c604feadd8b29d15055",
                          "typeString": "literal_string \"You need to donate more ETH!\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1132:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1132:101:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "1132:101:0"
                },
                {
                  "expression": {
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 153,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1239:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 156,
                      "indexExpression": {
                        "expression": {
                          "id": 154,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1248:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1248:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1239:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 157,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1263:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1263:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1239:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "1239:33:0"
                },
                {
                  "body": {
                    "id": 188,
                    "nodeType": "Block",
                    "src": "1425:103:0",
                    "statements": [
                      {
                        "assignments": [
                          173
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 173,
                            "mutability": "mutable",
                            "name": "account",
                            "nameLocation": "1441:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 188,
                            "src": "1433:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 172,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1433:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 177,
                        "initialValue": {
                          "baseExpression": {
                            "id": 174,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "1451:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 176,
                          "indexExpression": {
                            "id": 175,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 162,
                            "src": "1460:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1451:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1433:29:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 178,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "1473:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 179,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1484:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1484:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1473:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 187,
                        "nodeType": "IfStatement",
                        "src": "1470:52:0",
                        "trueBody": {
                          "id": 186,
                          "nodeType": "Block",
                          "src": "1495:27:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 182,
                                  "name": "flag",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 132,
                                  "src": "1505:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 183,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1512:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1505:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 185,
                              "nodeType": "ExpressionStatement",
                              "src": "1505:8:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 165,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "1399:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 166,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1403:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1403:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1399:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 189,
                  "initializationExpression": {
                    "assignments": [
                      162
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 162,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1392:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "1384:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1384:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 164,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1396:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1384:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1420:3:0",
                      "subExpression": {
                        "id": 169,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 162,
                        "src": "1420:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 171,
                    "nodeType": "ExpressionStatement",
                    "src": "1420:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "1379:149:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 190,
                      "name": "flag",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "1536:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1544:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1536:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 201,
                  "nodeType": "IfStatement",
                  "src": "1533:53:0",
                  "trueBody": {
                    "id": 200,
                    "nodeType": "Block",
                    "src": "1546:40:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 196,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1568:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1568:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 193,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "1554:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1554:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1554:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 199,
                        "nodeType": "ExpressionStatement",
                        "src": "1554:25:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "a392c223",
            "id": 203,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositToSC",
            "nameLocation": "1040:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1051:2:0"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1069:0:0"
            },
            "scope": 343,
            "src": "1031:559:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 221,
              "nodeType": "Block",
              "src": "1666:138:0",
              "statements": [
                {
                  "assignments": [
                    null,
                    209,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 209,
                      "mutability": "mutable",
                      "name": "answer",
                      "nameLocation": "1682:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 221,
                      "src": "1675:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 208,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1675:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 213,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 210,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1698:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$389",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 388,
                      "src": "1698:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1698:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1672:53:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 216,
                          "name": "answer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 209,
                          "src": "1746:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "3130303030303030303030",
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1755:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          },
                          "value": "10000000000"
                        },
                        "src": "1746:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1738:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 214,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1738:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1738:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 207,
                  "id": 220,
                  "nodeType": "Return",
                  "src": "1731:36:0"
                }
              ]
            },
            "functionSelector": "98d5fdca",
            "id": 222,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "1625:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1633:2:0"
            },
            "returnParameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 222,
                  "src": "1657:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1657:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1656:9:0"
            },
            "scope": 343,
            "src": "1616:188:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 245,
              "nodeType": "Block",
              "src": "1884:142:0",
              "statements": [
                {
                  "assignments": [
                    230
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 230,
                      "mutability": "mutable",
                      "name": "ethPrice",
                      "nameLocation": "1898:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 245,
                      "src": "1890:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 229,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1890:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 233,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 231,
                      "name": "getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 222,
                      "src": "1909:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1909:10:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1890:29:0"
                },
                {
                  "assignments": [
                    235
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 235,
                      "mutability": "mutable",
                      "name": "ethAmountInUsd",
                      "nameLocation": "1933:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 245,
                      "src": "1925:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 234,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1925:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 242,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 236,
                            "name": "ethPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 230,
                            "src": "1951:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 237,
                            "name": "ethAmouth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "1962:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1951:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 239,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1950:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030303030303030303030303030303030",
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1975:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1000000000000000000"
                    },
                    "src": "1950:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1925:69:0"
                },
                {
                  "expression": {
                    "id": 243,
                    "name": "ethAmountInUsd",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 235,
                    "src": "2007:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 228,
                  "id": 244,
                  "nodeType": "Return",
                  "src": "2000:21:0"
                }
              ]
            },
            "functionSelector": "6e5b6b28",
            "id": 246,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getConversionRate",
            "nameLocation": "1817:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 224,
                  "mutability": "mutable",
                  "name": "ethAmouth",
                  "nameLocation": "1843:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "1835:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1835:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1834:19:0"
            },
            "returnParameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 227,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 246,
                  "src": "1875:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1875:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1874:9:0"
            },
            "scope": 343,
            "src": "1808:218:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 277,
              "nodeType": "Block",
              "src": "2115:152:0",
              "statements": [
                {
                  "assignments": [
                    252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 252,
                      "mutability": "mutable",
                      "name": "minimumUSD",
                      "nameLocation": "2129:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 277,
                      "src": "2121:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 251,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2121:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 258,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_50000000000000000000_by_1",
                      "typeString": "int_const 50000000000000000000"
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3530",
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2142:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "id": 256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2147:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "3138",
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2151:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "src": "2147:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "2142:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_50000000000000000000_by_1",
                      "typeString": "int_const 50000000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2121:32:0"
                },
                {
                  "assignments": [
                    260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 260,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "2167:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 277,
                      "src": "2159:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 259,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2159:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 263,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 261,
                      "name": "getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 222,
                      "src": "2175:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2175:10:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2159:26:0"
                },
                {
                  "assignments": [
                    265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 265,
                      "mutability": "mutable",
                      "name": "precision",
                      "nameLocation": "2199:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 277,
                      "src": "2191:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 264,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2191:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 269,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2211:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "3138",
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2215:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "2211:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2191:26:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 270,
                            "name": "minimumUSD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 252,
                            "src": "2231:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 271,
                            "name": "precision",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 265,
                            "src": "2244:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2231:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 273,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2230:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 274,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 260,
                      "src": "2257:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2230:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 250,
                  "id": 276,
                  "nodeType": "Return",
                  "src": "2223:39:0"
                }
              ]
            },
            "functionSelector": "09bc33a7",
            "id": 278,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntranceFee",
            "nameLocation": "2068:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2082:2:0"
            },
            "returnParameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "2106:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2106:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2105:9:0"
            },
            "scope": 343,
            "src": "2059:208:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 289,
              "nodeType": "Block",
              "src": "2292:66:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 281,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2306:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2306:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 283,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "2320:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2306:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f75277265206e6f74206f776e6572",
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2327:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cebc5a43b2c2c07e6cc110a04808ec574d31f81650ed8c0f874bb25332ac9a3f",
                          "typeString": "literal_string \"you're not owner\""
                        },
                        "value": "you're not owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cebc5a43b2c2c07e6cc110a04808ec574d31f81650ed8c0f874bb25332ac9a3f",
                          "typeString": "literal_string \"you're not owner\""
                        }
                      ],
                      "id": 280,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2298:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2298:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "2298:48:0"
                },
                {
                  "id": 288,
                  "nodeType": "PlaceholderStatement",
                  "src": "2352:1:0"
                }
              ]
            },
            "id": 290,
            "name": "onlyOwner",
            "nameLocation": "2280:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2289:2:0"
            },
            "src": "2271:87:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 341,
              "nodeType": "Block",
              "src": "2407:296:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 303,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2450:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SimpleBank_$343",
                                "typeString": "contract SimpleBank"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SimpleBank_$343",
                                "typeString": "contract SimpleBank"
                              }
                            ],
                            "id": 302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2442:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 301,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2442:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2442:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2442:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 297,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2421:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2421:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2413:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 295,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2413:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2413:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2413:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2413:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "2413:51:0"
                },
                {
                  "body": {
                    "id": 331,
                    "nodeType": "Block",
                    "src": "2593:73:0",
                    "statements": [
                      {
                        "assignments": [
                          320
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 320,
                            "mutability": "mutable",
                            "name": "account",
                            "nameLocation": "2609:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 331,
                            "src": "2601:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 319,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2601:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 324,
                        "initialValue": {
                          "baseExpression": {
                            "id": 321,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2619:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 323,
                          "indexExpression": {
                            "id": 322,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 309,
                            "src": "2628:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2619:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2601:29:0"
                      },
                      {
                        "expression": {
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 325,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "2638:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 327,
                            "indexExpression": {
                              "id": 326,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 320,
                              "src": "2647:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2638:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2658:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2638:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 330,
                        "nodeType": "ExpressionStatement",
                        "src": "2638:21:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 312,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "2567:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 313,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2571:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2571:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2567:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 332,
                  "initializationExpression": {
                    "assignments": [
                      309
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 309,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2560:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 332,
                        "src": "2552:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 308,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2552:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 311,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2564:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2552:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2588:3:0",
                      "subExpression": {
                        "id": 316,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "2588:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 318,
                    "nodeType": "ExpressionStatement",
                    "src": "2588:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "2547:119:0"
                },
                {
                  "expression": {
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 333,
                      "name": "accounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "2671:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2696:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2682:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 334,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2686:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 335,
                          "nodeType": "ArrayTypeName",
                          "src": "2686:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2682:16:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "2671:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "2671:27:0"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 342,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 293,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 292,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 290,
                  "src": "2397:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2397:9:0"
              }
            ],
            "name": "withdraw",
            "nameLocation": "2371:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2379:2:0"
            },
            "returnParameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2407:0:0"
            },
            "scope": 343,
            "src": "2362:341:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 344,
        "src": "112:2594:0",
        "usedErrors": []
      }
    ],
    "src": "32:2675:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051610b93380380610b9383398101604081905261002f9161006f565b600380546001600160a01b039092166001600160a01b03199283161790556000805490911633908117825581526004602052604090206103e8905561009f565b60006020828403121561008157600080fd5b81516001600160a01b038116811461009857600080fd5b9392505050565b610ae5806100ae6000396000f3fe60806040526004361061009c5760003560e01c80637b428ed5116100645780637b428ed51461015857806388ab139a1461017b57806398d5fdca14610191578063a392c223146101a6578063a9059cbb146101ae578063f2a40db8146101ce57600080fd5b806309bc33a7146100a157806327e235e3146100c95780633ccfd60b146100f65780636e5b6b2814610100578063741bef1a14610120575b600080fd5b3480156100ad57600080fd5b506100b66101ee565b6040519081526020015b60405180910390f35b3480156100d557600080fd5b506100b66100e436600461080a565b60046020526000908152604090205481565b6100fe61022b565b005b34801561010c57600080fd5b506100b661011b36600461082c565b610322565b34801561012c57600080fd5b50600354610140906001600160a01b031681565b6040516001600160a01b0390911681526020016100c0565b34801561016457600080fd5b5061016d610356565b6040516100c0929190610845565b34801561018757600080fd5b506100b660025481565b34801561019d57600080fd5b506100b6610488565b6100fe61051f565b3480156101ba57600080fd5b506100fe6101c93660046108c9565b610651565b3480156101da57600080fd5b506101406101e936600461082c565b61074a565b60006802b5e3af16b188000081610203610488565b9050670de0b6b3a7640000816102198285610909565b6102239190610928565b935050505090565b6000546001600160a01b0316331461027d5760405162461bcd60e51b815260206004820152601060248201526f3cb7ba93b932903737ba1037bbb732b960811b60448201526064015b60405180910390fd5b60405133904780156108fc02916000818181858888f193505050501580156102a9573d6000803e3d6000fd5b5060005b600154811015610301576000600182815481106102cc576102cc61094a565b60009182526020808320909101546001600160a01b0316825260049052604081205550806102f981610960565b9150506102ad565b50604080516000815260208101918290525161031f91600191610774565b50565b60008061032d610488565b90506000670de0b6b3a76400006103448584610909565b61034e9190610928565b949350505050565b606080600060018054905067ffffffffffffffff8111156103795761037961097b565b6040519080825280602002602001820160405280156103a2578160200160208202803683370190505b50905060005b60015481101561041f5760046000600183815481106103c9576103c961094a565b60009182526020808320909101546001600160a01b0316835282019290925260400190205482518390839081106104025761040261094a565b60209081029190910101528061041781610960565b9150506103a8565b506001818180548060200260200160405190810160405280929190818152602001828054801561047857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161045a575b5050505050915092509250509091565b600080600360009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156104de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050291906109ab565b505050915050806402540be40061051991906109fb565b91505090565b60016802b5e3af16b18800008061053534610322565b10156105835760405162461bcd60e51b815260206004820152601c60248201527f596f75206e65656420746f20646f6e617465206d6f72652045544821000000006044820152606401610274565b33600090815260046020526040812080543492906105a2908490610a80565b90915550600090505b600154811015610601576000600182815481106105ca576105ca61094a565b6000918252602090912001546001600160a01b03169050338114156105ee57600093505b50806105f981610960565b9150506105ab565b50816001141561064d576001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b031916331790555b5050565b336000908152600460205260409020548111156106a65760405162461bcd60e51b81526020600482015260136024820152726e6f7420656e6f7567682062616c616e63657360681b6044820152606401610274565b336001600160a01b03831614156106f55760405162461bcd60e51b81526020600482015260136024820152726e6f7420656e6f7567682062616c616e63657360681b6044820152606401610274565b3360009081526004602052604081208054839290610714908490610a98565b90915550506001600160a01b03821660009081526004602052604081208054839290610741908490610a80565b90915550505050565b6001818154811061075a57600080fd5b6000918252602090912001546001600160a01b0316905081565b8280548282559060005260206000209081019282156107c9579160200282015b828111156107c957825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610794565b506107d59291506107d9565b5090565b5b808211156107d557600081556001016107da565b80356001600160a01b038116811461080557600080fd5b919050565b60006020828403121561081c57600080fd5b610825826107ee565b9392505050565b60006020828403121561083e57600080fd5b5035919050565b604080825283519082018190526000906020906060840190828701845b828110156108875781516001600160a01b031684529284019290840190600101610862565b5050508381038285015284518082528583019183019060005b818110156108bc578351835292840192918401916001016108a0565b5090979650505050505050565b600080604083850312156108dc57600080fd5b6108e5836107ee565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610923576109236108f3565b500290565b60008261094557634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610974576109746108f3565b5060010190565b634e487b7160e01b600052604160045260246000fd5b805169ffffffffffffffffffff8116811461080557600080fd5b600080600080600060a086880312156109c357600080fd5b6109cc86610991565b94506020860151935060408601519250606086015191506109ef60808701610991565b90509295509295909350565b60006001600160ff1b0381841382841380821686840486111615610a2157610a216108f3565b600160ff1b6000871282811687830589121615610a4057610a406108f3565b60008712925087820587128484161615610a5c57610a5c6108f3565b87850587128184161615610a7257610a726108f3565b505050929093029392505050565b60008219821115610a9357610a936108f3565b500190565b600082821015610aaa57610aaa6108f3565b50039056fea264697066735822122087038299a679f04d386f3cc6fa5e012812fbdf66f916929b36246a3a4e52afd964736f6c634300080a0033",
  "bytecodeSha1": "a0c2261d06be1cbb294fc2e616d1749c07f44d01",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "SimpleBank",
  "coverageMap": {
    "branches": {
      "0": {
        "SimpleBank.depositToSC": {
          "18": [
            1147,
            1189,
            true
          ],
          "19": [
            1473,
            1494,
            false
          ],
          "20": [
            1536,
            1545,
            false
          ]
        },
        "SimpleBank.transfer": {
          "21": [
            528,
            555,
            true
          ],
          "22": [
            593,
            615,
            true
          ]
        }
      },
      "1": {}
    },
    "statements": {
      "0": {
        "SimpleBank.depositToSC": {
          "9": [
            1132,
            1233
          ],
          "10": [
            1239,
            1272
          ],
          "11": [
            1505,
            1513
          ],
          "12": [
            1420,
            1423
          ],
          "13": [
            1554,
            1579
          ]
        },
        "SimpleBank.getEntranceFee": {
          "0": [
            2223,
            2262
          ]
        },
        "SimpleBank.getListAccountAndBalaces": {
          "5": [
            934,
            977
          ],
          "6": [
            922,
            925
          ],
          "7": [
            989,
            1023
          ]
        },
        "SimpleBank.getPrice": {
          "8": [
            1731,
            1767
          ]
        },
        "SimpleBank.transfer": {
          "14": [
            520,
            579
          ],
          "15": [
            585,
            639
          ],
          "16": [
            645,
            672
          ],
          "17": [
            678,
            703
          ]
        },
        "SimpleBank.withdraw": {
          "1": [
            2413,
            2464
          ],
          "2": [
            2638,
            2659
          ],
          "3": [
            2588,
            2591
          ],
          "4": [
            2671,
            2698
          ]
        }
      },
      "1": {}
    }
  },
  "dependencies": [
    "AggregatorV3Interface"
  ],
  "deployedBytecode": "60806040526004361061009c5760003560e01c80637b428ed5116100645780637b428ed51461015857806388ab139a1461017b57806398d5fdca14610191578063a392c223146101a6578063a9059cbb146101ae578063f2a40db8146101ce57600080fd5b806309bc33a7146100a157806327e235e3146100c95780633ccfd60b146100f65780636e5b6b2814610100578063741bef1a14610120575b600080fd5b3480156100ad57600080fd5b506100b66101ee565b6040519081526020015b60405180910390f35b3480156100d557600080fd5b506100b66100e436600461080a565b60046020526000908152604090205481565b6100fe61022b565b005b34801561010c57600080fd5b506100b661011b36600461082c565b610322565b34801561012c57600080fd5b50600354610140906001600160a01b031681565b6040516001600160a01b0390911681526020016100c0565b34801561016457600080fd5b5061016d610356565b6040516100c0929190610845565b34801561018757600080fd5b506100b660025481565b34801561019d57600080fd5b506100b6610488565b6100fe61051f565b3480156101ba57600080fd5b506100fe6101c93660046108c9565b610651565b3480156101da57600080fd5b506101406101e936600461082c565b61074a565b60006802b5e3af16b188000081610203610488565b9050670de0b6b3a7640000816102198285610909565b6102239190610928565b935050505090565b6000546001600160a01b0316331461027d5760405162461bcd60e51b815260206004820152601060248201526f3cb7ba93b932903737ba1037bbb732b960811b60448201526064015b60405180910390fd5b60405133904780156108fc02916000818181858888f193505050501580156102a9573d6000803e3d6000fd5b5060005b600154811015610301576000600182815481106102cc576102cc61094a565b60009182526020808320909101546001600160a01b0316825260049052604081205550806102f981610960565b9150506102ad565b50604080516000815260208101918290525161031f91600191610774565b50565b60008061032d610488565b90506000670de0b6b3a76400006103448584610909565b61034e9190610928565b949350505050565b606080600060018054905067ffffffffffffffff8111156103795761037961097b565b6040519080825280602002602001820160405280156103a2578160200160208202803683370190505b50905060005b60015481101561041f5760046000600183815481106103c9576103c961094a565b60009182526020808320909101546001600160a01b0316835282019290925260400190205482518390839081106104025761040261094a565b60209081029190910101528061041781610960565b9150506103a8565b506001818180548060200260200160405190810160405280929190818152602001828054801561047857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161045a575b5050505050915092509250509091565b600080600360009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156104de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050291906109ab565b505050915050806402540be40061051991906109fb565b91505090565b60016802b5e3af16b18800008061053534610322565b10156105835760405162461bcd60e51b815260206004820152601c60248201527f596f75206e65656420746f20646f6e617465206d6f72652045544821000000006044820152606401610274565b33600090815260046020526040812080543492906105a2908490610a80565b90915550600090505b600154811015610601576000600182815481106105ca576105ca61094a565b6000918252602090912001546001600160a01b03169050338114156105ee57600093505b50806105f981610960565b9150506105ab565b50816001141561064d576001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b031916331790555b5050565b336000908152600460205260409020548111156106a65760405162461bcd60e51b81526020600482015260136024820152726e6f7420656e6f7567682062616c616e63657360681b6044820152606401610274565b336001600160a01b03831614156106f55760405162461bcd60e51b81526020600482015260136024820152726e6f7420656e6f7567682062616c616e63657360681b6044820152606401610274565b3360009081526004602052604081208054839290610714908490610a98565b90915550506001600160a01b03821660009081526004602052604081208054839290610741908490610a80565b90915550505050565b6001818154811061075a57600080fd5b6000918252602090912001546001600160a01b0316905081565b8280548282559060005260206000209081019282156107c9579160200282015b828111156107c957825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610794565b506107d59291506107d9565b5090565b5b808211156107d557600081556001016107da565b80356001600160a01b038116811461080557600080fd5b919050565b60006020828403121561081c57600080fd5b610825826107ee565b9392505050565b60006020828403121561083e57600080fd5b5035919050565b604080825283519082018190526000906020906060840190828701845b828110156108875781516001600160a01b031684529284019290840190600101610862565b5050508381038285015284518082528583019183019060005b818110156108bc578351835292840192918401916001016108a0565b5090979650505050505050565b600080604083850312156108dc57600080fd5b6108e5836107ee565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610923576109236108f3565b500290565b60008261094557634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610974576109746108f3565b5060010190565b634e487b7160e01b600052604160045260246000fd5b805169ffffffffffffffffffff8116811461080557600080fd5b600080600080600060a086880312156109c357600080fd5b6109cc86610991565b94506020860151935060408601519250606086015191506109ef60808701610991565b90509295509295909350565b60006001600160ff1b0381841382841380821686840486111615610a2157610a216108f3565b600160ff1b6000871282811687830589121615610a4057610a406108f3565b60008712925087820587128484161615610a5c57610a5c6108f3565b87850587128184161615610a7257610a726108f3565b505050929093029392505050565b60008219821115610a9357610a936108f3565b500190565b600082821015610aaa57610aaa6108f3565b50039056fea264697066735822122087038299a679f04d386f3cc6fa5e012812fbdf66f916929b36246a3a4e52afd964736f6c634300080a0033",
  "deployedSourceMap": "112:2594:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2059:208;;;;;;;;;;;;;:::i;:::-;;;160:25:2;;;148:2;133:18;2059:208:0;;;;;;;;254:43;;;;;;;;;;-1:-1:-1;254:43:0;;;;;:::i;:::-;;;;;;;;;;;;;;2362:341;;;:::i;:::-;;1808:218;;;;;;;;;;-1:-1:-1;1808:218:0;;;;;:::i;:::-;;:::i;212:38::-;;;;;;;;;;-1:-1:-1;212:38:0;;;;-1:-1:-1;;;;;212:38:0;;;;;;-1:-1:-1;;;;;943:32:2;;;925:51;;913:2;898:18;212:38:0;750:232:2;712:316:0;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;182:26::-;;;;;;;;;;;;;;;;1616:188;;;;;;;;;;;;;:::i;1031:559::-;;;:::i;458:250::-;;;;;;;;;;-1:-1:-1;458:250:0;;;;;:::i;:::-;;:::i;153:25::-;;;;;;;;;;-1:-1:-1;153:25:0;;;;;:::i;:::-;;:::i;2059:208::-;2106:7;2142:11;2106:7;2175:10;:8;:10::i;:::-;2159:26;-1:-1:-1;2211:6:0;2159:26;2231:22;2211:6;2231:10;:22;:::i;:::-;2230:32;;;;:::i;:::-;2223:39;;;;;2059:208;:::o;2362:341::-;2320:5;;-1:-1:-1;;;;;2320:5:0;2306:10;:19;2298:48;;;;-1:-1:-1;;;2298:48:0;;3366:2:2;2298:48:0;;;3348:21:2;3405:2;3385:18;;;3378:30;-1:-1:-1;;;3424:18:2;;;3417:46;3480:18;;2298:48:0;;;;;;;;;2413:51:::1;::::0;2421:10:::1;::::0;2442:21:::1;2413:51:::0;::::1;;;::::0;::::1;::::0;;;2442:21;2421:10;2413:51;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;2552:9;2547:119;2571:8;:15:::0;2567:19;::::1;2547:119;;;2601:15;2619:8;2628:1;2619:11;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;2619:11:0::1;2638:17:::0;;:8:::1;:17:::0;;;;;:21;-1:-1:-1;2588:3:0;::::1;::::0;::::1;:::i;:::-;;;;2547:119;;;-1:-1:-1::0;2682:16:0::1;::::0;;2696:1:::1;2682:16:::0;;::::1;::::0;::::1;::::0;;;;2671:27;::::1;::::0;:8:::1;::::0;:27:::1;:::i;:::-;;2362:341::o:0;1808:218::-;1875:7;1890:16;1909:10;:8;:10::i;:::-;1890:29;-1:-1:-1;1925:22:0;1975:19;1951:20;1962:9;1890:29;1951:20;:::i;:::-;1950:44;;;;:::i;:::-;1925:69;1808:218;-1:-1:-1;;;;1808:218:0:o;712:316::-;768:16;785;808:33;858:8;:15;;;;844:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;844:30:0;;808:66;;884:9;880:104;904:8;:15;900:19;;880:104;;;956:8;:21;965:8;974:1;965:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;965:11:0;956:21;;;;;;;;;;;;;934:19;;:16;;951:1;;934:19;;;;;;:::i;:::-;;;;;;;;;;:43;922:3;;;;:::i;:::-;;;;880:104;;;;997:8;1006:16;989:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;989:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;712:316;;:::o;1616:188::-;1657:7;1675:13;1698:9;;;;;;;;;-1:-1:-1;;;;;1698:9:0;-1:-1:-1;;;;;1698:25:0;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1672:53;;;;;;1746:6;1755:11;1746:20;;;;:::i;:::-;1731:36;;;1616:188;:::o;1031:559::-;1087:1;1115:11;;1147:28;1165:9;1147:17;:28::i;:::-;:42;;1132:101;;;;-1:-1:-1;;;1132:101:0;;5335:2:2;1132:101:0;;;5317:21:2;5374:2;5354:18;;;5347:30;5413;5393:18;;;5386:58;5461:18;;1132:101:0;5133:352:2;1132:101:0;1248:10;1239:20;;;;:8;:20;;;;;:33;;1263:9;;1239:20;:33;;1263:9;;1239:33;:::i;:::-;;;;-1:-1:-1;1384:9:0;;-1:-1:-1;1379:149:0;1403:8;:15;1399:19;;1379:149;;;1433:15;1451:8;1460:1;1451:11;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1451:11:0;;-1:-1:-1;1484:10:0;1473:21;;1470:52;;;1512:1;1505:8;;1470:52;-1:-1:-1;1420:3:0;;;;:::i;:::-;;;;1379:149;;;;1536:4;1544:1;1536:9;1533:53;;;1554:8;:25;;;;;;;-1:-1:-1;1554:25:0;;;;;;;;-1:-1:-1;;;;;;1554:25:0;1568:10;1554:25;;;1533:53;1069:521;;1031:559::o;458:250::-;537:10;528:20;;;;:8;:20;;;;;;:27;-1:-1:-1;528:27:0;520:59;;;;-1:-1:-1;;;520:59:0;;5825:2:2;520:59:0;;;5807:21:2;5864:2;5844:18;;;5837:30;-1:-1:-1;;;5883:18:2;;;5876:49;5942:18;;520:59:0;5623:343:2;520:59:0;593:10;-1:-1:-1;;;;;593:22:0;;;;585:54;;;;-1:-1:-1;;;585:54:0;;5825:2:2;585:54:0;;;5807:21:2;5864:2;5844:18;;;5837:30;-1:-1:-1;;;5883:18:2;;;5876:49;5942:18;;585:54:0;5623:343:2;585:54:0;654:10;645:20;;;;:8;:20;;;;;:27;;669:3;;645:20;:27;;669:3;;645:27;:::i;:::-;;;;-1:-1:-1;;;;;;;678:18:0;;;;;;:8;:18;;;;;:25;;700:3;;678:18;:25;;700:3;;678:25;:::i;:::-;;;;-1:-1:-1;;;;458:250:0:o;153:25::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;153:25:0;;-1:-1:-1;153:25:0;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:173:2;264:20;;-1:-1:-1;;;;;313:31:2;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:186::-;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;525:29;544:9;525:29;:::i;:::-;515:39;374:186;-1:-1:-1;;;374:186:2:o;565:180::-;624:6;677:2;665:9;656:7;652:23;648:32;645:52;;;693:1;690;683:12;645:52;-1:-1:-1;716:23:2;;565:180;-1:-1:-1;565:180:2:o;987:1178::-;1255:2;1267:21;;;1337:13;;1240:18;;;1359:22;;;1207:4;;1434;;1412:2;1397:18;;;1461:15;;;1207:4;1504:195;1518:6;1515:1;1512:13;1504:195;;;1583:13;;-1:-1:-1;;;;;1579:39:2;1567:52;;1639:12;;;;1674:15;;;;1615:1;1533:9;1504:195;;;-1:-1:-1;;;1735:19:2;;;1715:18;;;1708:47;1805:13;;1827:21;;;1903:15;;;;1866:12;;;1938:1;1948:189;1964:8;1959:3;1956:17;1948:189;;;2033:15;;2019:30;;2110:17;;;;2071:14;;;;1992:1;1983:11;1948:189;;;-1:-1:-1;2154:5:2;;987:1178;-1:-1:-1;;;;;;;987:1178:2:o;2170:254::-;2238:6;2246;2299:2;2287:9;2278:7;2274:23;2270:32;2267:52;;;2315:1;2312;2305:12;2267:52;2338:29;2357:9;2338:29;:::i;:::-;2328:39;2414:2;2399:18;;;;2386:32;;-1:-1:-1;;;2170:254:2:o;2637:127::-;2698:10;2693:3;2689:20;2686:1;2679:31;2729:4;2726:1;2719:15;2753:4;2750:1;2743:15;2769:168;2809:7;2875:1;2871;2867:6;2863:14;2860:1;2857:21;2852:1;2845:9;2838:17;2834:45;2831:71;;;2882:18;;:::i;:::-;-1:-1:-1;2922:9:2;;2769:168::o;2942:217::-;2982:1;3008;2998:132;;3052:10;3047:3;3043:20;3040:1;3033:31;3087:4;3084:1;3077:15;3115:4;3112:1;3105:15;2998:132;-1:-1:-1;3144:9:2;;2942:217::o;3509:127::-;3570:10;3565:3;3561:20;3558:1;3551:31;3601:4;3598:1;3591:15;3625:4;3622:1;3615:15;3641:135;3680:3;-1:-1:-1;;3701:17:2;;3698:43;;;3721:18;;:::i;:::-;-1:-1:-1;3768:1:2;3757:13;;3641:135::o;3781:127::-;3842:10;3837:3;3833:20;3830:1;3823:31;3873:4;3870:1;3863:15;3897:4;3894:1;3887:15;3913:179;3991:13;;4044:22;4033:34;;4023:45;;4013:73;;4082:1;4079;4072:12;4097:473;4200:6;4208;4216;4224;4232;4285:3;4273:9;4264:7;4260:23;4256:33;4253:53;;;4302:1;4299;4292:12;4253:53;4325:39;4354:9;4325:39;:::i;:::-;4315:49;;4404:2;4393:9;4389:18;4383:25;4373:35;;4448:2;4437:9;4433:18;4427:25;4417:35;;4492:2;4481:9;4477:18;4471:25;4461:35;;4515:49;4559:3;4548:9;4544:19;4515:49;:::i;:::-;4505:59;;4097:473;;;;;;;;:::o;4575:553::-;4614:7;-1:-1:-1;;;;;4684:9:2;;;4712;;;4737:11;;;4756:10;;;4750:17;;4733:35;4730:61;;;4771:18;;:::i;:::-;-1:-1:-1;;;4847:1:2;4840:9;;4865:11;;;4885;;;4878:19;;4861:37;4858:63;;;4901:18;;:::i;:::-;4947:1;4944;4940:9;4930:19;;4994:1;4990:2;4985:11;4982:1;4978:19;4973:2;4969;4965:11;4961:37;4958:63;;;5001:18;;:::i;:::-;5066:1;5062:2;5057:11;5054:1;5050:19;5045:2;5041;5037:11;5033:37;5030:63;;;5073:18;;:::i;:::-;-1:-1:-1;;;5113:9:2;;;;;4575:553;-1:-1:-1;;;4575:553:2:o;5490:128::-;5530:3;5561:1;5557:6;5554:1;5551:13;5548:39;;;5567:18;;:::i;:::-;-1:-1:-1;5603:9:2;;5490:128::o;5971:125::-;6011:4;6039:1;6036;6033:8;6030:34;;;6044:18;;:::i;:::-;-1:-1:-1;6081:9:2;;5971:125::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    112,
    2706
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B428ED5 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x7B428ED5 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x88AB139A EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0xA392C223 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0xF2A40DB8 EQ PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x6E5B6B28 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x741BEF1A EQ PUSH2 0x120 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x1EE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0x80A JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x22B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x140 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH2 0x356 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP3 SWAP2 SWAP1 PUSH2 0x845 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x488 JUMP JUMPDEST PUSH2 0xFE PUSH2 0x51F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x82C JUMP JUMPDEST PUSH2 0x74A JUMP JUMPDEST PUSH1 0x0 PUSH9 0x2B5E3AF16B1880000 DUP2 PUSH2 0x203 PUSH2 0x488 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x219 DUP3 DUP6 PUSH2 0x909 JUMP JUMPDEST PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x928 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x27D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3CB7BA93B932903737BA1037BBB732B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x301 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2CC JUMPI PUSH2 0x2CC PUSH2 0x94A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x4 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE POP DUP1 PUSH2 0x2F9 DUP2 PUSH2 0x960 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2AD JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE MLOAD PUSH2 0x31F SWAP2 PUSH1 0x1 SWAP2 PUSH2 0x774 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x32D PUSH2 0x488 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x344 DUP6 DUP5 PUSH2 0x909 JUMP JUMPDEST PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x928 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x379 JUMPI PUSH2 0x379 PUSH2 0x97B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3A2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x41F JUMPI PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x3C9 JUMPI PUSH2 0x3C9 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x402 JUMPI PUSH2 0x402 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x417 DUP2 PUSH2 0x960 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3A8 JUMP JUMPDEST POP PUSH1 0x1 DUP2 DUP2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x478 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x45A JUMPI JUMPDEST POP POP POP POP POP SWAP2 POP SWAP3 POP SWAP3 POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x9AB JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 PUSH5 0x2540BE400 PUSH2 0x519 SWAP2 SWAP1 PUSH2 0x9FB JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH9 0x2B5E3AF16B1880000 DUP1 PUSH2 0x535 CALLVALUE PUSH2 0x322 JUMP JUMPDEST LT ISZERO PUSH2 0x583 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206E65656420746F20646F6E617465206D6F7265204554482100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x274 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x5A2 SWAP1 DUP5 SWAP1 PUSH2 0xA80 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x601 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5CA JUMPI PUSH2 0x5CA PUSH2 0x94A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP CALLER DUP2 EQ ISZERO PUSH2 0x5EE JUMPI PUSH1 0x0 SWAP4 POP JUMPDEST POP DUP1 PUSH2 0x5F9 DUP2 PUSH2 0x960 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5AB JUMP JUMPDEST POP DUP2 PUSH1 0x1 EQ ISZERO PUSH2 0x64D JUMPI PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x6A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x6E6F7420656E6F7567682062616C616E636573 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x274 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x6F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x6E6F7420656E6F7567682062616C616E636573 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x274 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x714 SWAP1 DUP5 SWAP1 PUSH2 0xA98 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x741 SWAP1 DUP5 SWAP1 PUSH2 0xA80 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x75A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x7C9 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x7C9 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x794 JUMP JUMPDEST POP PUSH2 0x7D5 SWAP3 SWAP2 POP PUSH2 0x7D9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x7DA JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x81C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x825 DUP3 PUSH2 0x7EE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x83E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x887 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x862 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE DUP6 DUP4 ADD SWAP2 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8BC JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x8A0 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 PUSH2 0x7EE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x923 JUMPI PUSH2 0x923 PUSH2 0x8F3 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x945 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x974 JUMPI PUSH2 0x974 PUSH2 0x8F3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x805 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x9C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9CC DUP7 PUSH2 0x991 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x9EF PUSH1 0x80 DUP8 ADD PUSH2 0x991 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP2 DUP5 SGT DUP3 DUP5 SGT DUP1 DUP3 AND DUP7 DUP5 DIV DUP7 GT AND ISZERO PUSH2 0xA21 JUMPI PUSH2 0xA21 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x0 DUP8 SLT DUP3 DUP2 AND DUP8 DUP4 SDIV DUP10 SLT AND ISZERO PUSH2 0xA40 JUMPI PUSH2 0xA40 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x0 DUP8 SLT SWAP3 POP DUP8 DUP3 SDIV DUP8 SLT DUP5 DUP5 AND AND ISZERO PUSH2 0xA5C JUMPI PUSH2 0xA5C PUSH2 0x8F3 JUMP JUMPDEST DUP8 DUP6 SDIV DUP8 SLT DUP2 DUP5 AND AND ISZERO PUSH2 0xA72 JUMPI PUSH2 0xA72 PUSH2 0x8F3 JUMP JUMPDEST POP POP POP SWAP3 SWAP1 SWAP4 MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xA93 JUMPI PUSH2 0xA93 PUSH2 0x8F3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xAAA JUMPI PUSH2 0xAAA PUSH2 0x8F3 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 SUB DUP3 SWAP10 0xA6 PUSH26 0xF04D386F3CC6FA5E012812FBDF66F916929B36246A3A4E52AFD9 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        112,
        2706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C"
    },
    "12": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7B428ED5"
    },
    "25": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64"
    },
    "29": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7B428ED5"
    },
    "36": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x158"
    },
    "40": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x88AB139A"
    },
    "47": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B"
    },
    "51": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x98D5FDCA"
    },
    "58": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x191"
    },
    "62": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA392C223"
    },
    "69": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A6"
    },
    "73": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "80": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "EQ",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AE"
    },
    "84": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF2A40DB8"
    },
    "91": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "EQ",
      "path": "0"
    },
    "92": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CE"
    },
    "95": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "96": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "REVERT",
      "path": "0"
    },
    "100": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9BC33A7"
    },
    "107": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "EQ",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1"
    },
    "111": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x27E235E3"
    },
    "118": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "EQ",
      "path": "0"
    },
    "119": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC9"
    },
    "122": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "123": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "124": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3CCFD60B"
    },
    "129": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "EQ",
      "path": "0"
    },
    "130": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF6"
    },
    "133": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "134": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "135": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6E5B6B28"
    },
    "140": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "EQ",
      "path": "0"
    },
    "141": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "144": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "145": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "146": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x741BEF1A"
    },
    "151": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "EQ",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "155": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "156": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "157": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "159": {
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "DUP1",
      "path": "0"
    },
    "160": {
      "first_revert": true,
      "fn": null,
      "offset": [
        112,
        2706
      ],
      "op": "REVERT",
      "path": "0"
    },
    "161": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "162": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "163": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "DUP1",
      "path": "0"
    },
    "164": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "165": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD"
    },
    "168": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "169": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "171": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "DUP1",
      "path": "0"
    },
    "172": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "REVERT",
      "path": "0"
    },
    "173": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "174": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "POP",
      "path": "0"
    },
    "175": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "178": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EE"
    },
    "181": {
      "fn": "SimpleBank.getEntranceFee",
      "jump": "i",
      "offset": [
        2059,
        2267
      ],
      "op": "JUMP",
      "path": "0"
    },
    "182": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "183": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "185": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "186": {
      "op": "SWAP1"
    },
    "187": {
      "op": "DUP2"
    },
    "188": {
      "op": "MSTORE"
    },
    "189": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "191": {
      "op": "ADD"
    },
    "192": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "193": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "195": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "196": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "198": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "SUB",
      "path": "0"
    },
    "199": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "200": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "RETURN",
      "path": "0"
    },
    "201": {
      "offset": [
        254,
        297
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "202": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "203": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "DUP1",
      "path": "0"
    },
    "204": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "205": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD5"
    },
    "208": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "209": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "211": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "DUP1",
      "path": "0"
    },
    "212": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "REVERT",
      "path": "0"
    },
    "213": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "214": {
      "op": "POP"
    },
    "215": {
      "offset": [
        254,
        297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "218": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE4"
    },
    "221": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "222": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "224": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80A"
    },
    "227": {
      "fn": "SimpleBank.getEntranceFee",
      "jump": "i",
      "offset": [
        254,
        297
      ],
      "op": "JUMP",
      "path": "0"
    },
    "228": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "229": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "231": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "233": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "234": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "236": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "237": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "238": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "239": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "241": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "242": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "243": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "244": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "245": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        254,
        297
      ],
      "op": "JUMP",
      "path": "0"
    },
    "246": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2362,
        2703
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "247": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2362,
        2703
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFE"
    },
    "250": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2362,
        2703
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22B"
    },
    "253": {
      "fn": "SimpleBank.withdraw",
      "jump": "i",
      "offset": [
        2362,
        2703
      ],
      "op": "JUMP",
      "path": "0"
    },
    "254": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2362,
        2703
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "255": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2362,
        2703
      ],
      "op": "STOP",
      "path": "0"
    },
    "256": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1808,
        2026
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "257": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1808,
        2026
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "258": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1808,
        2026
      ],
      "op": "DUP1",
      "path": "0"
    },
    "259": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1808,
        2026
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "260": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1808,
        2026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10C"
    },
    "263": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1808,
        2026
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "264": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1808,
        2026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "266": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1808,
        2026
      ],
      "op": "DUP1",
      "path": "0"
    },
    "267": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1808,
        2026
      ],
      "op": "REVERT",
      "path": "0"
    },
    "268": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1808,
        2026
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "269": {
      "op": "POP"
    },
    "270": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1808,
        2026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "273": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1808,
        2026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11B"
    },
    "276": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1808,
        2026
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "277": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1808,
        2026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "279": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1808,
        2026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82C"
    },
    "282": {
      "fn": "SimpleBank.getConversionRate",
      "jump": "i",
      "offset": [
        1808,
        2026
      ],
      "op": "JUMP",
      "path": "0"
    },
    "283": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1808,
        2026
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "284": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1808,
        2026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x322"
    },
    "287": {
      "fn": "SimpleBank.getConversionRate",
      "jump": "i",
      "offset": [
        1808,
        2026
      ],
      "op": "JUMP",
      "path": "0"
    },
    "288": {
      "offset": [
        212,
        250
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "289": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        212,
        250
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "290": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        212,
        250
      ],
      "op": "DUP1",
      "path": "0"
    },
    "291": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        212,
        250
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "292": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        212,
        250
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12C"
    },
    "295": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        212,
        250
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "296": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        212,
        250
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "298": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        212,
        250
      ],
      "op": "DUP1",
      "path": "0"
    },
    "299": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        212,
        250
      ],
      "op": "REVERT",
      "path": "0"
    },
    "300": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        212,
        250
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "301": {
      "op": "POP"
    },
    "302": {
      "offset": [
        212,
        250
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "304": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        212,
        250
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "305": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        212,
        250
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "308": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        212,
        250
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "315": {
      "op": "SHL"
    },
    "316": {
      "op": "SUB"
    },
    "317": {
      "offset": [
        212,
        250
      ],
      "op": "AND",
      "path": "0"
    },
    "318": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        212,
        250
      ],
      "op": "DUP2",
      "path": "0"
    },
    "319": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        212,
        250
      ],
      "op": "JUMP",
      "path": "0"
    },
    "320": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        212,
        250
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "321": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        212,
        250
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "323": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        212,
        250
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "330": {
      "op": "SHL"
    },
    "331": {
      "op": "SUB"
    },
    "332": {
      "op": "SWAP1"
    },
    "333": {
      "op": "SWAP2"
    },
    "334": {
      "op": "AND"
    },
    "335": {
      "op": "DUP2"
    },
    "336": {
      "op": "MSTORE"
    },
    "337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "339": {
      "op": "ADD"
    },
    "340": {
      "offset": [
        212,
        250
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0"
    },
    "343": {
      "op": "JUMP"
    },
    "344": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "345": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "346": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "DUP1",
      "path": "0"
    },
    "347": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "348": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164"
    },
    "351": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "352": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "354": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "DUP1",
      "path": "0"
    },
    "355": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "REVERT",
      "path": "0"
    },
    "356": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "357": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "POP",
      "path": "0"
    },
    "358": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16D"
    },
    "361": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x356"
    },
    "364": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "jump": "i",
      "offset": [
        712,
        1028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "365": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "366": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "368": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "369": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0"
    },
    "372": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "373": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "374": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "375": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x845"
    },
    "378": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "jump": "i",
      "offset": [
        712,
        1028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "379": {
      "offset": [
        182,
        208
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "380": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        182,
        208
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "381": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        182,
        208
      ],
      "op": "DUP1",
      "path": "0"
    },
    "382": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        182,
        208
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "383": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        182,
        208
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x187"
    },
    "386": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        182,
        208
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "387": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        182,
        208
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "389": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        182,
        208
      ],
      "op": "DUP1",
      "path": "0"
    },
    "390": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        182,
        208
      ],
      "op": "REVERT",
      "path": "0"
    },
    "391": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        182,
        208
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "392": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        182,
        208
      ],
      "op": "POP",
      "path": "0"
    },
    "393": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        182,
        208
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "396": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        182,
        208
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "398": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        182,
        208
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "399": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        182,
        208
      ],
      "op": "DUP2",
      "path": "0"
    },
    "400": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        182,
        208
      ],
      "op": "JUMP",
      "path": "0"
    },
    "401": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1616,
        1804
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "402": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1616,
        1804
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "403": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1616,
        1804
      ],
      "op": "DUP1",
      "path": "0"
    },
    "404": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1616,
        1804
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "405": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1616,
        1804
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19D"
    },
    "408": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1616,
        1804
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "409": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1616,
        1804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "411": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1616,
        1804
      ],
      "op": "DUP1",
      "path": "0"
    },
    "412": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1616,
        1804
      ],
      "op": "REVERT",
      "path": "0"
    },
    "413": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1616,
        1804
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "414": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1616,
        1804
      ],
      "op": "POP",
      "path": "0"
    },
    "415": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1616,
        1804
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "418": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1616,
        1804
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x488"
    },
    "421": {
      "fn": "SimpleBank.getPrice",
      "jump": "i",
      "offset": [
        1616,
        1804
      ],
      "op": "JUMP",
      "path": "0"
    },
    "422": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1031,
        1590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "423": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1031,
        1590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFE"
    },
    "426": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1031,
        1590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51F"
    },
    "429": {
      "fn": "SimpleBank.depositToSC",
      "jump": "i",
      "offset": [
        1031,
        1590
      ],
      "op": "JUMP",
      "path": "0"
    },
    "430": {
      "fn": "SimpleBank.transfer",
      "offset": [
        458,
        708
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "431": {
      "fn": "SimpleBank.transfer",
      "offset": [
        458,
        708
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "432": {
      "fn": "SimpleBank.transfer",
      "offset": [
        458,
        708
      ],
      "op": "DUP1",
      "path": "0"
    },
    "433": {
      "fn": "SimpleBank.transfer",
      "offset": [
        458,
        708
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "434": {
      "fn": "SimpleBank.transfer",
      "offset": [
        458,
        708
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BA"
    },
    "437": {
      "fn": "SimpleBank.transfer",
      "offset": [
        458,
        708
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "438": {
      "fn": "SimpleBank.transfer",
      "offset": [
        458,
        708
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "440": {
      "fn": "SimpleBank.transfer",
      "offset": [
        458,
        708
      ],
      "op": "DUP1",
      "path": "0"
    },
    "441": {
      "fn": "SimpleBank.transfer",
      "offset": [
        458,
        708
      ],
      "op": "REVERT",
      "path": "0"
    },
    "442": {
      "fn": "SimpleBank.transfer",
      "offset": [
        458,
        708
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "443": {
      "op": "POP"
    },
    "444": {
      "fn": "SimpleBank.transfer",
      "offset": [
        458,
        708
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFE"
    },
    "447": {
      "fn": "SimpleBank.transfer",
      "offset": [
        458,
        708
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C9"
    },
    "450": {
      "fn": "SimpleBank.transfer",
      "offset": [
        458,
        708
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "451": {
      "fn": "SimpleBank.transfer",
      "offset": [
        458,
        708
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "453": {
      "fn": "SimpleBank.transfer",
      "offset": [
        458,
        708
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C9"
    },
    "456": {
      "fn": "SimpleBank.transfer",
      "jump": "i",
      "offset": [
        458,
        708
      ],
      "op": "JUMP",
      "path": "0"
    },
    "457": {
      "fn": "SimpleBank.transfer",
      "offset": [
        458,
        708
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "458": {
      "fn": "SimpleBank.transfer",
      "offset": [
        458,
        708
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x651"
    },
    "461": {
      "fn": "SimpleBank.transfer",
      "jump": "i",
      "offset": [
        458,
        708
      ],
      "op": "JUMP",
      "path": "0"
    },
    "462": {
      "offset": [
        153,
        178
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "463": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "464": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "DUP1",
      "path": "0"
    },
    "465": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "466": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA"
    },
    "469": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "470": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "472": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "DUP1",
      "path": "0"
    },
    "473": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "REVERT",
      "path": "0"
    },
    "474": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "475": {
      "op": "POP"
    },
    "476": {
      "offset": [
        153,
        178
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "479": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E9"
    },
    "482": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "483": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "485": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82C"
    },
    "488": {
      "fn": "SimpleBank.transfer",
      "jump": "i",
      "offset": [
        153,
        178
      ],
      "op": "JUMP",
      "path": "0"
    },
    "489": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "490": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x74A"
    },
    "493": {
      "fn": "SimpleBank.transfer",
      "jump": "i",
      "offset": [
        153,
        178
      ],
      "op": "JUMP",
      "path": "0"
    },
    "494": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "495": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2106,
        2113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "497": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2142,
        2153
      ],
      "op": "PUSH9",
      "path": "0",
      "value": "0x2B5E3AF16B1880000"
    },
    "507": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2106,
        2113
      ],
      "op": "DUP2",
      "path": "0"
    },
    "508": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2175,
        2185
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x203"
    },
    "511": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2175,
        2183
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x488"
    },
    "514": {
      "fn": "SimpleBank.getEntranceFee",
      "jump": "i",
      "offset": [
        2175,
        2185
      ],
      "op": "JUMP",
      "path": "0"
    },
    "515": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2175,
        2185
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "516": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2159,
        2185
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "517": {
      "op": "POP"
    },
    "518": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2211,
        2217
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "527": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2159,
        2185
      ],
      "op": "DUP2",
      "path": "0"
    },
    "528": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2231,
        2253
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 0,
      "value": "0x219"
    },
    "531": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2211,
        2217
      ],
      "op": "DUP3",
      "path": "0"
    },
    "532": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2231,
        2241
      ],
      "op": "DUP6",
      "path": "0"
    },
    "533": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2231,
        2253
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x909"
    },
    "536": {
      "fn": "SimpleBank.getEntranceFee",
      "jump": "i",
      "offset": [
        2231,
        2253
      ],
      "op": "JUMP",
      "path": "0"
    },
    "537": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2231,
        2253
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "538": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2230,
        2262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x223"
    },
    "541": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2230,
        2262
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "542": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2230,
        2262
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "543": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2230,
        2262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x928"
    },
    "546": {
      "fn": "SimpleBank.getEntranceFee",
      "jump": "i",
      "offset": [
        2230,
        2262
      ],
      "op": "JUMP",
      "path": "0"
    },
    "547": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2230,
        2262
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "548": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2223,
        2262
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "549": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2223,
        2262
      ],
      "op": "POP",
      "path": "0"
    },
    "550": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2223,
        2262
      ],
      "op": "POP",
      "path": "0"
    },
    "551": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2223,
        2262
      ],
      "op": "POP",
      "path": "0"
    },
    "552": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2223,
        2262
      ],
      "op": "POP",
      "path": "0"
    },
    "553": {
      "fn": "SimpleBank.getEntranceFee",
      "offset": [
        2059,
        2267
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "554": {
      "fn": "SimpleBank.getEntranceFee",
      "jump": "o",
      "offset": [
        2059,
        2267
      ],
      "op": "JUMP",
      "path": "0"
    },
    "555": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2362,
        2703
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "556": {
      "offset": [
        2320,
        2325
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "558": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2320,
        2325
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "563": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "565": {
      "op": "SHL"
    },
    "566": {
      "op": "SUB"
    },
    "567": {
      "offset": [
        2320,
        2325
      ],
      "op": "AND",
      "path": "0"
    },
    "568": {
      "offset": [
        2306,
        2316
      ],
      "op": "CALLER",
      "path": "0"
    },
    "569": {
      "offset": [
        2306,
        2325
      ],
      "op": "EQ",
      "path": "0"
    },
    "570": {
      "offset": [
        2298,
        2346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27D"
    },
    "573": {
      "offset": [
        2298,
        2346
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "574": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2298,
        2346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "576": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2298,
        2346
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "577": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "581": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "583": {
      "op": "SHL"
    },
    "584": {
      "offset": [
        2298,
        2346
      ],
      "op": "DUP2",
      "path": "0"
    },
    "585": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2298,
        2346
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "586": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "588": {
      "offset": [
        2298,
        2346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "590": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2298,
        2346
      ],
      "op": "DUP3",
      "path": "0"
    },
    "591": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2298,
        2346
      ],
      "op": "ADD",
      "path": "0"
    },
    "592": {
      "op": "MSTORE"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "597": {
      "op": "DUP3"
    },
    "598": {
      "op": "ADD"
    },
    "599": {
      "op": "MSTORE"
    },
    "600": {
      "op": "PUSH16",
      "value": "0x3CB7BA93B932903737BA1037BBB732B9"
    },
    "617": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "619": {
      "op": "SHL"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "622": {
      "op": "DUP3"
    },
    "623": {
      "op": "ADD"
    },
    "624": {
      "op": "MSTORE"
    },
    "625": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "627": {
      "op": "ADD"
    },
    "628": {
      "offset": [
        2298,
        2346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "629": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2298,
        2346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "631": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2298,
        2346
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "632": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2298,
        2346
      ],
      "op": "DUP1",
      "path": "0"
    },
    "633": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2298,
        2346
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "634": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2298,
        2346
      ],
      "op": "SUB",
      "path": "0"
    },
    "635": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2298,
        2346
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "636": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2298,
        2346
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "637": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2298,
        2346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "638": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x40"
    },
    "640": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "641": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2421,
        2431
      ],
      "op": "CALLER",
      "path": "0"
    },
    "642": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2421,
        2431
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "643": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2442,
        2463
      ],
      "op": "SELFBALANCE",
      "path": "0"
    },
    "644": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "DUP1",
      "path": "0"
    },
    "645": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "646": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "649": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "MUL",
      "path": "0"
    },
    "650": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "651": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "653": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "DUP2",
      "path": "0"
    },
    "654": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "DUP2",
      "path": "0"
    },
    "655": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "DUP2",
      "path": "0"
    },
    "656": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2442,
        2463
      ],
      "op": "DUP6",
      "path": "0"
    },
    "657": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2421,
        2431
      ],
      "op": "DUP9",
      "path": "0"
    },
    "658": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "DUP9",
      "path": "0"
    },
    "659": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "CALL",
      "path": "0"
    },
    "660": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "661": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "POP",
      "path": "0"
    },
    "662": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "POP",
      "path": "0"
    },
    "663": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "POP",
      "path": "0"
    },
    "664": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "POP",
      "path": "0"
    },
    "665": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "666": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "DUP1",
      "path": "0"
    },
    "667": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "668": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A9"
    },
    "671": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "672": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "673": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "675": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "DUP1",
      "path": "0"
    },
    "676": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "677": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "678": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "680": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "REVERT",
      "path": "0"
    },
    "681": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "682": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2413,
        2464
      ],
      "op": "POP",
      "path": "0"
    },
    "683": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2552,
        2561
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "685": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2547,
        2666
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "686": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2571,
        2579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "688": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2571,
        2586
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "689": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2567,
        2586
      ],
      "op": "DUP2",
      "path": "0"
    },
    "690": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2567,
        2586
      ],
      "op": "LT",
      "path": "0"
    },
    "691": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2547,
        2666
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "692": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2547,
        2666
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x301"
    },
    "695": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2547,
        2666
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "696": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2601,
        2616
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "698": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2619,
        2627
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "700": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2628,
        2629
      ],
      "op": "DUP3",
      "path": "0"
    },
    "701": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2619,
        2630
      ],
      "op": "DUP2",
      "path": "0"
    },
    "702": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2619,
        2630
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "703": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2619,
        2630
      ],
      "op": "DUP2",
      "path": "0"
    },
    "704": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2619,
        2630
      ],
      "op": "LT",
      "path": "0"
    },
    "705": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2619,
        2630
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CC"
    },
    "708": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2619,
        2630
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "709": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2619,
        2630
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CC"
    },
    "712": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2619,
        2630
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x94A"
    },
    "715": {
      "fn": "SimpleBank.withdraw",
      "jump": "i",
      "offset": [
        2619,
        2630
      ],
      "op": "JUMP",
      "path": "0"
    },
    "716": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2619,
        2630
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "717": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2619,
        2630
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "719": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2619,
        2630
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "720": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2619,
        2630
      ],
      "op": "DUP3",
      "path": "0"
    },
    "721": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2619,
        2630
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "722": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2619,
        2630
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "724": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2619,
        2630
      ],
      "op": "DUP1",
      "path": "0"
    },
    "725": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2619,
        2630
      ],
      "op": "DUP4",
      "path": "0"
    },
    "726": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2619,
        2630
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "727": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2619,
        2630
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "728": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2619,
        2630
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "729": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2619,
        2630
      ],
      "op": "ADD",
      "path": "0"
    },
    "730": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2619,
        2630
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "737": {
      "op": "SHL"
    },
    "738": {
      "op": "SUB"
    },
    "739": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2619,
        2630
      ],
      "op": "AND",
      "path": "0"
    },
    "740": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2638,
        2655
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 2
    },
    "741": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2638,
        2655
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "742": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2638,
        2646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "744": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2638,
        2655
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "745": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2638,
        2655
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "746": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2638,
        2655
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "748": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2638,
        2655
      ],
      "op": "DUP2",
      "path": "0"
    },
    "749": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2638,
        2655
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "750": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2638,
        2659
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "751": {
      "op": "POP"
    },
    "752": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2588,
        2591
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 3
    },
    "753": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2588,
        2591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F9"
    },
    "756": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2588,
        2591
      ],
      "op": "DUP2",
      "path": "0"
    },
    "757": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2588,
        2591
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x960"
    },
    "760": {
      "fn": "SimpleBank.withdraw",
      "jump": "i",
      "offset": [
        2588,
        2591
      ],
      "op": "JUMP",
      "path": "0"
    },
    "761": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2588,
        2591
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "762": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2588,
        2591
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "763": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2588,
        2591
      ],
      "op": "POP",
      "path": "0"
    },
    "764": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2588,
        2591
      ],
      "op": "POP",
      "path": "0"
    },
    "765": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2547,
        2666
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AD"
    },
    "768": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2547,
        2666
      ],
      "op": "JUMP",
      "path": "0"
    },
    "769": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2547,
        2666
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "770": {
      "op": "POP"
    },
    "771": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2682,
        2698
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x40"
    },
    "773": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2682,
        2698
      ],
      "op": "DUP1",
      "path": "0"
    },
    "774": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2682,
        2698
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "775": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2696,
        2697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "777": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2682,
        2698
      ],
      "op": "DUP2",
      "path": "0"
    },
    "778": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2682,
        2698
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "779": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2682,
        2698
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "781": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2682,
        2698
      ],
      "op": "DUP2",
      "path": "0"
    },
    "782": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2682,
        2698
      ],
      "op": "ADD",
      "path": "0"
    },
    "783": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2682,
        2698
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "784": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2682,
        2698
      ],
      "op": "DUP3",
      "path": "0"
    },
    "785": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2682,
        2698
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "786": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2682,
        2698
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "787": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2671,
        2698
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "788": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2671,
        2698
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31F"
    },
    "791": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2671,
        2698
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "792": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2671,
        2679
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "794": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2671,
        2679
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "795": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2671,
        2698
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x774"
    },
    "798": {
      "fn": "SimpleBank.withdraw",
      "jump": "i",
      "offset": [
        2671,
        2698
      ],
      "op": "JUMP",
      "path": "0"
    },
    "799": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2671,
        2698
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "800": {
      "fn": "SimpleBank.withdraw",
      "offset": [
        2671,
        2698
      ],
      "op": "POP",
      "path": "0"
    },
    "801": {
      "fn": "SimpleBank.withdraw",
      "jump": "o",
      "offset": [
        2362,
        2703
      ],
      "op": "JUMP",
      "path": "0"
    },
    "802": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1808,
        2026
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "803": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1875,
        1882
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "805": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1890,
        1906
      ],
      "op": "DUP1",
      "path": "0"
    },
    "806": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1909,
        1919
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32D"
    },
    "809": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1909,
        1917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x488"
    },
    "812": {
      "fn": "SimpleBank.getConversionRate",
      "jump": "i",
      "offset": [
        1909,
        1919
      ],
      "op": "JUMP",
      "path": "0"
    },
    "813": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1909,
        1919
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "814": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1890,
        1919
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "815": {
      "op": "POP"
    },
    "816": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1925,
        1947
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "818": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1975,
        1994
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "827": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1951,
        1971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x344"
    },
    "830": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1962,
        1971
      ],
      "op": "DUP6",
      "path": "0"
    },
    "831": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1890,
        1919
      ],
      "op": "DUP5",
      "path": "0"
    },
    "832": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1951,
        1971
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x909"
    },
    "835": {
      "fn": "SimpleBank.getConversionRate",
      "jump": "i",
      "offset": [
        1951,
        1971
      ],
      "op": "JUMP",
      "path": "0"
    },
    "836": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1951,
        1971
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "837": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1950,
        1994
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34E"
    },
    "840": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1950,
        1994
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "841": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1950,
        1994
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "842": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1950,
        1994
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x928"
    },
    "845": {
      "fn": "SimpleBank.getConversionRate",
      "jump": "i",
      "offset": [
        1950,
        1994
      ],
      "op": "JUMP",
      "path": "0"
    },
    "846": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1950,
        1994
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "847": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1925,
        1994
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "848": {
      "fn": "SimpleBank.getConversionRate",
      "offset": [
        1808,
        2026
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "849": {
      "op": "POP"
    },
    "850": {
      "op": "POP"
    },
    "851": {
      "op": "POP"
    },
    "852": {
      "op": "POP"
    },
    "853": {
      "fn": "SimpleBank.getConversionRate",
      "jump": "o",
      "offset": [
        1808,
        2026
      ],
      "op": "JUMP",
      "path": "0"
    },
    "854": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "855": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        768,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "857": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        785,
        801
      ],
      "op": "DUP1",
      "path": "0"
    },
    "858": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        808,
        841
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "860": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        858,
        866
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "862": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        858,
        873
      ],
      "op": "DUP1",
      "path": "0"
    },
    "863": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        858,
        873
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "864": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        858,
        873
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "865": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        858,
        873
      ],
      "op": "POP",
      "path": "0"
    },
    "866": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "875": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "DUP2",
      "path": "0"
    },
    "876": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "GT",
      "path": "0"
    },
    "877": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "878": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x379"
    },
    "881": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "882": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x379"
    },
    "885": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97B"
    },
    "888": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "jump": "i",
      "offset": [
        844,
        874
      ],
      "op": "JUMP",
      "path": "0"
    },
    "889": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "890": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "892": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "893": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "894": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "DUP1",
      "path": "0"
    },
    "895": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "DUP3",
      "path": "0"
    },
    "896": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "897": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "DUP1",
      "path": "0"
    },
    "898": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "900": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "MUL",
      "path": "0"
    },
    "901": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "903": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "ADD",
      "path": "0"
    },
    "904": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "DUP3",
      "path": "0"
    },
    "905": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "ADD",
      "path": "0"
    },
    "906": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "908": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "909": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "DUP1",
      "path": "0"
    },
    "910": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "911": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A2"
    },
    "914": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "915": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "DUP2",
      "path": "0"
    },
    "916": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "918": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "ADD",
      "path": "0"
    },
    "919": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "921": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "DUP3",
      "path": "0"
    },
    "922": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "MUL",
      "path": "0"
    },
    "923": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "DUP1",
      "path": "0"
    },
    "924": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "925": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "DUP4",
      "path": "0"
    },
    "926": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "927": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "ADD",
      "path": "0"
    },
    "928": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "929": {
      "op": "POP"
    },
    "930": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "931": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        844,
        874
      ],
      "op": "POP",
      "path": "0"
    },
    "932": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        808,
        874
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "933": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        808,
        874
      ],
      "op": "POP",
      "path": "0"
    },
    "934": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        884,
        893
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "936": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        880,
        984
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "937": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        904,
        912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "939": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        904,
        919
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "940": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        900,
        919
      ],
      "op": "DUP2",
      "path": "0"
    },
    "941": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        900,
        919
      ],
      "op": "LT",
      "path": "0"
    },
    "942": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        880,
        984
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "943": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        880,
        984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41F"
    },
    "946": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        880,
        984
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "947": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        956,
        964
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x4"
    },
    "949": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        956,
        977
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "951": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        965,
        973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "953": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        974,
        975
      ],
      "op": "DUP4",
      "path": "0"
    },
    "954": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        965,
        976
      ],
      "op": "DUP2",
      "path": "0"
    },
    "955": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        965,
        976
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "956": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        965,
        976
      ],
      "op": "DUP2",
      "path": "0"
    },
    "957": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        965,
        976
      ],
      "op": "LT",
      "path": "0"
    },
    "958": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        965,
        976
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C9"
    },
    "961": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        965,
        976
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "962": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        965,
        976
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C9"
    },
    "965": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        965,
        976
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x94A"
    },
    "968": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "jump": "i",
      "offset": [
        965,
        976
      ],
      "op": "JUMP",
      "path": "0"
    },
    "969": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        965,
        976
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "970": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        965,
        976
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "972": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        965,
        976
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "973": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        965,
        976
      ],
      "op": "DUP3",
      "path": "0"
    },
    "974": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        965,
        976
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "975": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        965,
        976
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "977": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        965,
        976
      ],
      "op": "DUP1",
      "path": "0"
    },
    "978": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        965,
        976
      ],
      "op": "DUP4",
      "path": "0"
    },
    "979": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        965,
        976
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "980": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        965,
        976
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "981": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        965,
        976
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "982": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        965,
        976
      ],
      "op": "ADD",
      "path": "0"
    },
    "983": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        965,
        976
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "988": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "990": {
      "op": "SHL"
    },
    "991": {
      "op": "SUB"
    },
    "992": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        965,
        976
      ],
      "op": "AND",
      "path": "0"
    },
    "993": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        956,
        977
      ],
      "op": "DUP4",
      "path": "0"
    },
    "994": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        956,
        977
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "995": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        956,
        977
      ],
      "op": "DUP3",
      "path": "0"
    },
    "996": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        956,
        977
      ],
      "op": "ADD",
      "path": "0"
    },
    "997": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        956,
        977
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "998": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        956,
        977
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "999": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        956,
        977
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1000": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        956,
        977
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1001": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        956,
        977
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1003": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        956,
        977
      ],
      "op": "ADD",
      "path": "0"
    },
    "1004": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        956,
        977
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1005": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        956,
        977
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1006": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        956,
        977
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1007": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        934,
        953
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1008": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        934,
        953
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1009": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        934,
        950
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1010": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        934,
        950
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1011": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        951,
        952
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1012": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        951,
        952
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1013": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        934,
        953
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1014": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        934,
        953
      ],
      "op": "LT",
      "path": "0"
    },
    "1015": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        934,
        953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x402"
    },
    "1018": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        934,
        953
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1019": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        934,
        953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x402"
    },
    "1022": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        934,
        953
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x94A"
    },
    "1025": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "jump": "i",
      "offset": [
        934,
        953
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1026": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        934,
        953
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1027": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        934,
        953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1029": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        934,
        953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1030": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        934,
        953
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1031": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        934,
        953
      ],
      "op": "MUL",
      "path": "0"
    },
    "1032": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        934,
        953
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1033": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        934,
        953
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1034": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        934,
        953
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1035": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        934,
        953
      ],
      "op": "ADD",
      "path": "0"
    },
    "1036": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        934,
        953
      ],
      "op": "ADD",
      "path": "0"
    },
    "1037": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        934,
        977
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1038": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        922,
        925
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 6
    },
    "1039": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        922,
        925
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x417"
    },
    "1042": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        922,
        925
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1043": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        922,
        925
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x960"
    },
    "1046": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "jump": "i",
      "offset": [
        922,
        925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1047": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        922,
        925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1048": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        922,
        925
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1049": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        922,
        925
      ],
      "op": "POP",
      "path": "0"
    },
    "1050": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        922,
        925
      ],
      "op": "POP",
      "path": "0"
    },
    "1051": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        880,
        984
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A8"
    },
    "1054": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        880,
        984
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1055": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        880,
        984
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1056": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        880,
        984
      ],
      "op": "POP",
      "path": "0"
    },
    "1057": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        997,
        1005
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x1"
    },
    "1059": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        1006,
        1022
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1060": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1061": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1062": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1063": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1064": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1066": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "MUL",
      "path": "0"
    },
    "1067": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1069": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "ADD",
      "path": "0"
    },
    "1070": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1072": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1073": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1074": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1075": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "ADD",
      "path": "0"
    },
    "1076": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1078": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1079": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1080": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1081": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1082": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1083": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1084": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1085": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1086": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1088": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "ADD",
      "path": "0"
    },
    "1089": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1090": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1091": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1092": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1093": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1094": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x478"
    },
    "1097": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1098": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1100": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "MUL",
      "path": "0"
    },
    "1101": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1102": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "ADD",
      "path": "0"
    },
    "1103": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1104": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1105": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1107": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1108": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1110": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1112": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1113": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1114": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1115": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1116": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1123": {
      "op": "SHL"
    },
    "1124": {
      "op": "SUB"
    },
    "1125": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "AND",
      "path": "0"
    },
    "1126": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1127": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1128": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1130": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1131": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1132": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "ADD",
      "path": "0"
    },
    "1133": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1134": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1136": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "ADD",
      "path": "0"
    },
    "1137": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1138": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1139": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "GT",
      "path": "0"
    },
    "1140": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45A"
    },
    "1143": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1144": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1145": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "POP",
      "path": "0"
    },
    "1146": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "POP",
      "path": "0"
    },
    "1147": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "POP",
      "path": "0"
    },
    "1148": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "POP",
      "path": "0"
    },
    "1149": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "POP",
      "path": "0"
    },
    "1150": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1151": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "POP",
      "path": "0"
    },
    "1152": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1153": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "POP",
      "path": "0"
    },
    "1154": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1155": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "POP",
      "path": "0"
    },
    "1156": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        989,
        1023
      ],
      "op": "POP",
      "path": "0"
    },
    "1157": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1158": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "offset": [
        712,
        1028
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1159": {
      "fn": "SimpleBank.getListAccountAndBalaces",
      "jump": "o",
      "offset": [
        712,
        1028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1160": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1616,
        1804
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1161": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1657,
        1664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1163": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1675,
        1688
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1164": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1707
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1166": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1707
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1168": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1707
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1169": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1707
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1170": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1707
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1171": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1707
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1174": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1707
      ],
      "op": "EXP",
      "path": "0"
    },
    "1175": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1707
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1176": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1707
      ],
      "op": "DIV",
      "path": "0"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1183": {
      "op": "SHL"
    },
    "1184": {
      "op": "SUB"
    },
    "1185": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1707
      ],
      "op": "AND",
      "path": "0"
    },
    "1186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1192": {
      "op": "SHL"
    },
    "1193": {
      "op": "SUB"
    },
    "1194": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1723
      ],
      "op": "AND",
      "path": "0"
    },
    "1195": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1723
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFEAF968C"
    },
    "1200": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1202": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1203": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1204": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1209": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "AND",
      "path": "0"
    },
    "1210": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "1212": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "SHL",
      "path": "0"
    },
    "1213": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1214": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1215": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1217": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "ADD",
      "path": "0"
    },
    "1218": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1220": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1222": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1223": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1224": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1225": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "SUB",
      "path": "0"
    },
    "1226": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1227": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1228": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "GAS",
      "path": "0"
    },
    "1229": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "1230": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1231": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1232": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1233": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4DE"
    },
    "1236": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1237": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1238": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1240": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1241": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1242": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1243": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1245": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1246": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1247": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "POP",
      "path": "0"
    },
    "1248": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "POP",
      "path": "0"
    },
    "1249": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "POP",
      "path": "0"
    },
    "1250": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "POP",
      "path": "0"
    },
    "1251": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1253": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1254": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1255": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1257": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "NOT",
      "path": "0"
    },
    "1258": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1260": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1261": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "ADD",
      "path": "0"
    },
    "1262": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "AND",
      "path": "0"
    },
    "1263": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1264": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "ADD",
      "path": "0"
    },
    "1265": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1266": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1268": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1269": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "POP",
      "path": "0"
    },
    "1270": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1271": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "ADD",
      "path": "0"
    },
    "1272": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1273": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x502"
    },
    "1276": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1277": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1278": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9AB"
    },
    "1281": {
      "fn": "SimpleBank.getPrice",
      "jump": "i",
      "offset": [
        1698,
        1725
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1282": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1698,
        1725
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1283": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1672,
        1725
      ],
      "op": "POP",
      "path": "0"
    },
    "1284": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1672,
        1725
      ],
      "op": "POP",
      "path": "0"
    },
    "1285": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1672,
        1725
      ],
      "op": "POP",
      "path": "0"
    },
    "1286": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1672,
        1725
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1287": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1672,
        1725
      ],
      "op": "POP",
      "path": "0"
    },
    "1288": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1672,
        1725
      ],
      "op": "POP",
      "path": "0"
    },
    "1289": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1746,
        1752
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 8
    },
    "1290": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1755,
        1766
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x2540BE400"
    },
    "1296": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1746,
        1766
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x519"
    },
    "1299": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1746,
        1766
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1300": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1746,
        1766
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1301": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1746,
        1766
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9FB"
    },
    "1304": {
      "fn": "SimpleBank.getPrice",
      "jump": "i",
      "offset": [
        1746,
        1766
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1305": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1746,
        1766
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1306": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1731,
        1767
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1307": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1731,
        1767
      ],
      "op": "POP",
      "path": "0"
    },
    "1308": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1731,
        1767
      ],
      "op": "POP",
      "path": "0"
    },
    "1309": {
      "fn": "SimpleBank.getPrice",
      "offset": [
        1616,
        1804
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1310": {
      "fn": "SimpleBank.getPrice",
      "jump": "o",
      "offset": [
        1616,
        1804
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1311": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1031,
        1590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1312": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1087,
        1088
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1314": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1115,
        1126
      ],
      "op": "PUSH9",
      "path": "0",
      "value": "0x2B5E3AF16B1880000"
    },
    "1324": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1115,
        1126
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1325": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1147,
        1175
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 9,
      "value": "0x535"
    },
    "1328": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1165,
        1174
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1329": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1147,
        1164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x322"
    },
    "1332": {
      "fn": "SimpleBank.depositToSC",
      "jump": "i",
      "offset": [
        1147,
        1175
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1333": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1147,
        1175
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1334": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1147,
        1189
      ],
      "op": "LT",
      "path": "0"
    },
    "1335": {
      "branch": 18,
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1147,
        1189
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1336": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1132,
        1233
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x583"
    },
    "1339": {
      "branch": 18,
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1132,
        1233
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1340": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1132,
        1233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1342": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1132,
        1233
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1343": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1349": {
      "op": "SHL"
    },
    "1350": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1132,
        1233
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1351": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1132,
        1233
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1354": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1132,
        1233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1356": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1132,
        1233
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1357": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1132,
        1233
      ],
      "op": "ADD",
      "path": "0"
    },
    "1358": {
      "op": "MSTORE"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1363": {
      "op": "DUP3"
    },
    "1364": {
      "op": "ADD"
    },
    "1365": {
      "op": "MSTORE"
    },
    "1366": {
      "op": "PUSH32",
      "value": "0x596F75206E65656420746F20646F6E617465206D6F7265204554482100000000"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1401": {
      "op": "DUP3"
    },
    "1402": {
      "op": "ADD"
    },
    "1403": {
      "op": "MSTORE"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1406": {
      "op": "ADD"
    },
    "1407": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1132,
        1233
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x274"
    },
    "1410": {
      "op": "JUMP"
    },
    "1411": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1132,
        1233
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1412": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1248,
        1258
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 10
    },
    "1413": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1239,
        1259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1415": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1239,
        1259
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1416": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1239,
        1259
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1417": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1239,
        1259
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1418": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1239,
        1247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1420": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1239,
        1259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1422": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1239,
        1259
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1423": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1239,
        1259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1425": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1239,
        1259
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1426": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1239,
        1259
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1427": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1239,
        1272
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1428": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1239,
        1272
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1429": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1263,
        1272
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1430": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1263,
        1272
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1431": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1239,
        1259
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1432": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1239,
        1272
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A2"
    },
    "1435": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1239,
        1272
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1436": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1263,
        1272
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1437": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1263,
        1272
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1438": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1239,
        1272
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA80"
    },
    "1441": {
      "fn": "SimpleBank.depositToSC",
      "jump": "i",
      "offset": [
        1239,
        1272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1442": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1239,
        1272
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1443": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1239,
        1272
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1444": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1239,
        1272
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1445": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1239,
        1272
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1446": {
      "op": "POP"
    },
    "1447": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1384,
        1393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1449": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1384,
        1393
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1450": {
      "op": "POP"
    },
    "1451": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1379,
        1528
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1452": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1403,
        1411
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1454": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1403,
        1418
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1455": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1399,
        1418
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1456": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1399,
        1418
      ],
      "op": "LT",
      "path": "0"
    },
    "1457": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1379,
        1528
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1458": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1379,
        1528
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x601"
    },
    "1461": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1379,
        1528
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1462": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1433,
        1448
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1464": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1451,
        1459
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1466": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1460,
        1461
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1467": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1451,
        1462
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1468": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1451,
        1462
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1469": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1451,
        1462
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1470": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1451,
        1462
      ],
      "op": "LT",
      "path": "0"
    },
    "1471": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1451,
        1462
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CA"
    },
    "1474": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1451,
        1462
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1475": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1451,
        1462
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CA"
    },
    "1478": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1451,
        1462
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x94A"
    },
    "1481": {
      "fn": "SimpleBank.depositToSC",
      "jump": "i",
      "offset": [
        1451,
        1462
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1482": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1451,
        1462
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1483": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1451,
        1462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1485": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1451,
        1462
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1486": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1451,
        1462
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1487": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1451,
        1462
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1488": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1451,
        1462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1490": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1451,
        1462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1491": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1451,
        1462
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1492": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1451,
        1462
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1493": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1451,
        1462
      ],
      "op": "ADD",
      "path": "0"
    },
    "1494": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1451,
        1462
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1501": {
      "op": "SHL"
    },
    "1502": {
      "op": "SUB"
    },
    "1503": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1451,
        1462
      ],
      "op": "AND",
      "path": "0"
    },
    "1504": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1451,
        1462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1505": {
      "op": "POP"
    },
    "1506": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1484,
        1494
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1507": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1473,
        1494
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1508": {
      "branch": 19,
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1473,
        1494
      ],
      "op": "EQ",
      "path": "0"
    },
    "1509": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1470,
        1522
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1510": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1470,
        1522
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5EE"
    },
    "1513": {
      "branch": 19,
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1470,
        1522
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1514": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1512,
        1513
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x0"
    },
    "1516": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1505,
        1513
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1517": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1505,
        1513
      ],
      "op": "POP",
      "path": "0"
    },
    "1518": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1470,
        1522
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1519": {
      "op": "POP"
    },
    "1520": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1420,
        1423
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 12
    },
    "1521": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1420,
        1423
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F9"
    },
    "1524": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1420,
        1423
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1525": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1420,
        1423
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x960"
    },
    "1528": {
      "fn": "SimpleBank.depositToSC",
      "jump": "i",
      "offset": [
        1420,
        1423
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1529": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1420,
        1423
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1530": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1420,
        1423
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1531": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1420,
        1423
      ],
      "op": "POP",
      "path": "0"
    },
    "1532": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1420,
        1423
      ],
      "op": "POP",
      "path": "0"
    },
    "1533": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1379,
        1528
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AB"
    },
    "1536": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1379,
        1528
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1537": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1379,
        1528
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1538": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1379,
        1528
      ],
      "op": "POP",
      "path": "0"
    },
    "1539": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1536,
        1540
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1540": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1544,
        1545
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1542": {
      "branch": 20,
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1536,
        1545
      ],
      "op": "EQ",
      "path": "0"
    },
    "1543": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1533,
        1586
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1544": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1533,
        1586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64D"
    },
    "1547": {
      "branch": 20,
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1533,
        1586
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1548": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1554,
        1562
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x1"
    },
    "1550": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1554,
        1579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1551": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1554,
        1579
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1552": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1554,
        1579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1553": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1554,
        1579
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1554": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1554,
        1579
      ],
      "op": "ADD",
      "path": "0"
    },
    "1555": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1554,
        1579
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1556": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1554,
        1579
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1559": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1554,
        1579
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1560": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1554,
        1579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1561": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1554,
        1579
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1562": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1554,
        1579
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1563": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1554,
        1579
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "1596": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1554,
        1579
      ],
      "op": "ADD",
      "path": "0"
    },
    "1597": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1554,
        1579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1598": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1554,
        1579
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1605": {
      "op": "SHL"
    },
    "1606": {
      "op": "SUB"
    },
    "1607": {
      "op": "NOT"
    },
    "1608": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1554,
        1579
      ],
      "op": "AND",
      "path": "0"
    },
    "1609": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1568,
        1578
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1610": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1554,
        1579
      ],
      "op": "OR",
      "path": "0"
    },
    "1611": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1554,
        1579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1612": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1554,
        1579
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1613": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1533,
        1586
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1614": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1069,
        1590
      ],
      "op": "POP",
      "path": "0"
    },
    "1615": {
      "fn": "SimpleBank.depositToSC",
      "offset": [
        1069,
        1590
      ],
      "op": "POP",
      "path": "0"
    },
    "1616": {
      "fn": "SimpleBank.depositToSC",
      "jump": "o",
      "offset": [
        1031,
        1590
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1617": {
      "fn": "SimpleBank.transfer",
      "offset": [
        458,
        708
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1618": {
      "fn": "SimpleBank.transfer",
      "offset": [
        537,
        547
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 14
    },
    "1619": {
      "fn": "SimpleBank.transfer",
      "offset": [
        528,
        548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1621": {
      "fn": "SimpleBank.transfer",
      "offset": [
        528,
        548
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1622": {
      "fn": "SimpleBank.transfer",
      "offset": [
        528,
        548
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1623": {
      "fn": "SimpleBank.transfer",
      "offset": [
        528,
        548
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1624": {
      "fn": "SimpleBank.transfer",
      "offset": [
        528,
        536
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1626": {
      "fn": "SimpleBank.transfer",
      "offset": [
        528,
        548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1628": {
      "fn": "SimpleBank.transfer",
      "offset": [
        528,
        548
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1629": {
      "fn": "SimpleBank.transfer",
      "offset": [
        528,
        548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1631": {
      "fn": "SimpleBank.transfer",
      "offset": [
        528,
        548
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1632": {
      "fn": "SimpleBank.transfer",
      "offset": [
        528,
        548
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1633": {
      "fn": "SimpleBank.transfer",
      "offset": [
        528,
        548
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1634": {
      "fn": "SimpleBank.transfer",
      "offset": [
        528,
        555
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1635": {
      "op": "GT"
    },
    "1636": {
      "branch": 21,
      "fn": "SimpleBank.transfer",
      "offset": [
        528,
        555
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1637": {
      "fn": "SimpleBank.transfer",
      "offset": [
        520,
        579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A6"
    },
    "1640": {
      "branch": 21,
      "fn": "SimpleBank.transfer",
      "offset": [
        520,
        579
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1641": {
      "fn": "SimpleBank.transfer",
      "offset": [
        520,
        579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1643": {
      "fn": "SimpleBank.transfer",
      "offset": [
        520,
        579
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1644": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1650": {
      "op": "SHL"
    },
    "1651": {
      "fn": "SimpleBank.transfer",
      "offset": [
        520,
        579
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1652": {
      "fn": "SimpleBank.transfer",
      "offset": [
        520,
        579
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1655": {
      "fn": "SimpleBank.transfer",
      "offset": [
        520,
        579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1657": {
      "fn": "SimpleBank.transfer",
      "offset": [
        520,
        579
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1658": {
      "fn": "SimpleBank.transfer",
      "offset": [
        520,
        579
      ],
      "op": "ADD",
      "path": "0"
    },
    "1659": {
      "op": "MSTORE"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1664": {
      "op": "DUP3"
    },
    "1665": {
      "op": "ADD"
    },
    "1666": {
      "op": "MSTORE"
    },
    "1667": {
      "op": "PUSH19",
      "value": "0x6E6F7420656E6F7567682062616C616E636573"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "1689": {
      "op": "SHL"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1692": {
      "op": "DUP3"
    },
    "1693": {
      "op": "ADD"
    },
    "1694": {
      "op": "MSTORE"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1697": {
      "op": "ADD"
    },
    "1698": {
      "fn": "SimpleBank.transfer",
      "offset": [
        520,
        579
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x274"
    },
    "1701": {
      "op": "JUMP"
    },
    "1702": {
      "fn": "SimpleBank.transfer",
      "offset": [
        520,
        579
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1703": {
      "fn": "SimpleBank.transfer",
      "offset": [
        593,
        603
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 15
    },
    "1704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1710": {
      "op": "SHL"
    },
    "1711": {
      "op": "SUB"
    },
    "1712": {
      "fn": "SimpleBank.transfer",
      "offset": [
        593,
        615
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1713": {
      "fn": "SimpleBank.transfer",
      "offset": [
        593,
        615
      ],
      "op": "AND",
      "path": "0"
    },
    "1714": {
      "fn": "SimpleBank.transfer",
      "offset": [
        593,
        615
      ],
      "op": "EQ",
      "path": "0"
    },
    "1715": {
      "branch": 22,
      "fn": "SimpleBank.transfer",
      "offset": [
        593,
        615
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1716": {
      "fn": "SimpleBank.transfer",
      "offset": [
        585,
        639
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F5"
    },
    "1719": {
      "branch": 22,
      "fn": "SimpleBank.transfer",
      "offset": [
        585,
        639
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1720": {
      "fn": "SimpleBank.transfer",
      "offset": [
        585,
        639
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1722": {
      "fn": "SimpleBank.transfer",
      "offset": [
        585,
        639
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1723": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1729": {
      "op": "SHL"
    },
    "1730": {
      "fn": "SimpleBank.transfer",
      "offset": [
        585,
        639
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1731": {
      "fn": "SimpleBank.transfer",
      "offset": [
        585,
        639
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1734": {
      "fn": "SimpleBank.transfer",
      "offset": [
        585,
        639
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1736": {
      "fn": "SimpleBank.transfer",
      "offset": [
        585,
        639
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1737": {
      "fn": "SimpleBank.transfer",
      "offset": [
        585,
        639
      ],
      "op": "ADD",
      "path": "0"
    },
    "1738": {
      "op": "MSTORE"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1743": {
      "op": "DUP3"
    },
    "1744": {
      "op": "ADD"
    },
    "1745": {
      "op": "MSTORE"
    },
    "1746": {
      "op": "PUSH19",
      "value": "0x6E6F7420656E6F7567682062616C616E636573"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "1768": {
      "op": "SHL"
    },
    "1769": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1771": {
      "op": "DUP3"
    },
    "1772": {
      "op": "ADD"
    },
    "1773": {
      "op": "MSTORE"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1776": {
      "op": "ADD"
    },
    "1777": {
      "fn": "SimpleBank.transfer",
      "offset": [
        585,
        639
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x274"
    },
    "1780": {
      "op": "JUMP"
    },
    "1781": {
      "fn": "SimpleBank.transfer",
      "offset": [
        585,
        639
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1782": {
      "fn": "SimpleBank.transfer",
      "offset": [
        654,
        664
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 16
    },
    "1783": {
      "fn": "SimpleBank.transfer",
      "offset": [
        645,
        665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1785": {
      "fn": "SimpleBank.transfer",
      "offset": [
        645,
        665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1786": {
      "fn": "SimpleBank.transfer",
      "offset": [
        645,
        665
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1787": {
      "fn": "SimpleBank.transfer",
      "offset": [
        645,
        665
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1788": {
      "fn": "SimpleBank.transfer",
      "offset": [
        645,
        653
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1790": {
      "fn": "SimpleBank.transfer",
      "offset": [
        645,
        665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1792": {
      "fn": "SimpleBank.transfer",
      "offset": [
        645,
        665
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1793": {
      "fn": "SimpleBank.transfer",
      "offset": [
        645,
        665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1795": {
      "fn": "SimpleBank.transfer",
      "offset": [
        645,
        665
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1796": {
      "fn": "SimpleBank.transfer",
      "offset": [
        645,
        665
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1797": {
      "fn": "SimpleBank.transfer",
      "offset": [
        645,
        672
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1798": {
      "fn": "SimpleBank.transfer",
      "offset": [
        645,
        672
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1799": {
      "fn": "SimpleBank.transfer",
      "offset": [
        669,
        672
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1800": {
      "fn": "SimpleBank.transfer",
      "offset": [
        669,
        672
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1801": {
      "fn": "SimpleBank.transfer",
      "offset": [
        645,
        665
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1802": {
      "fn": "SimpleBank.transfer",
      "offset": [
        645,
        672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x714"
    },
    "1805": {
      "fn": "SimpleBank.transfer",
      "offset": [
        645,
        672
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1806": {
      "fn": "SimpleBank.transfer",
      "offset": [
        669,
        672
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1807": {
      "fn": "SimpleBank.transfer",
      "offset": [
        669,
        672
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1808": {
      "fn": "SimpleBank.transfer",
      "offset": [
        645,
        672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA98"
    },
    "1811": {
      "fn": "SimpleBank.transfer",
      "jump": "i",
      "offset": [
        645,
        672
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1812": {
      "fn": "SimpleBank.transfer",
      "offset": [
        645,
        672
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1813": {
      "fn": "SimpleBank.transfer",
      "offset": [
        645,
        672
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1814": {
      "fn": "SimpleBank.transfer",
      "offset": [
        645,
        672
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1815": {
      "fn": "SimpleBank.transfer",
      "offset": [
        645,
        672
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1816": {
      "op": "POP"
    },
    "1817": {
      "op": "POP"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1824": {
      "op": "SHL"
    },
    "1825": {
      "op": "SUB"
    },
    "1826": {
      "fn": "SimpleBank.transfer",
      "offset": [
        678,
        696
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 17
    },
    "1827": {
      "fn": "SimpleBank.transfer",
      "offset": [
        678,
        696
      ],
      "op": "AND",
      "path": "0"
    },
    "1828": {
      "fn": "SimpleBank.transfer",
      "offset": [
        678,
        696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1830": {
      "fn": "SimpleBank.transfer",
      "offset": [
        678,
        696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1831": {
      "fn": "SimpleBank.transfer",
      "offset": [
        678,
        696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1832": {
      "fn": "SimpleBank.transfer",
      "offset": [
        678,
        696
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1833": {
      "fn": "SimpleBank.transfer",
      "offset": [
        678,
        686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1835": {
      "fn": "SimpleBank.transfer",
      "offset": [
        678,
        696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1837": {
      "fn": "SimpleBank.transfer",
      "offset": [
        678,
        696
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1838": {
      "fn": "SimpleBank.transfer",
      "offset": [
        678,
        696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1840": {
      "fn": "SimpleBank.transfer",
      "offset": [
        678,
        696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1841": {
      "fn": "SimpleBank.transfer",
      "offset": [
        678,
        696
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1842": {
      "fn": "SimpleBank.transfer",
      "offset": [
        678,
        703
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1843": {
      "fn": "SimpleBank.transfer",
      "offset": [
        678,
        703
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1844": {
      "fn": "SimpleBank.transfer",
      "offset": [
        700,
        703
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1845": {
      "fn": "SimpleBank.transfer",
      "offset": [
        700,
        703
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1846": {
      "fn": "SimpleBank.transfer",
      "offset": [
        678,
        696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1847": {
      "fn": "SimpleBank.transfer",
      "offset": [
        678,
        703
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x741"
    },
    "1850": {
      "fn": "SimpleBank.transfer",
      "offset": [
        678,
        703
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1851": {
      "fn": "SimpleBank.transfer",
      "offset": [
        700,
        703
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1852": {
      "fn": "SimpleBank.transfer",
      "offset": [
        700,
        703
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1853": {
      "fn": "SimpleBank.transfer",
      "offset": [
        678,
        703
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA80"
    },
    "1856": {
      "fn": "SimpleBank.transfer",
      "jump": "i",
      "offset": [
        678,
        703
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1857": {
      "fn": "SimpleBank.transfer",
      "offset": [
        678,
        703
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1858": {
      "fn": "SimpleBank.transfer",
      "offset": [
        678,
        703
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1859": {
      "fn": "SimpleBank.transfer",
      "offset": [
        678,
        703
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1860": {
      "fn": "SimpleBank.transfer",
      "offset": [
        678,
        703
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1861": {
      "op": "POP"
    },
    "1862": {
      "op": "POP"
    },
    "1863": {
      "op": "POP"
    },
    "1864": {
      "op": "POP"
    },
    "1865": {
      "fn": "SimpleBank.transfer",
      "jump": "o",
      "offset": [
        458,
        708
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1866": {
      "offset": [
        153,
        178
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1867": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1869": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1870": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1871": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1872": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1873": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "LT",
      "path": "0"
    },
    "1874": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x75A"
    },
    "1877": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1878": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1880": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1881": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1882": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1883": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1885": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1886": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1887": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1888": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1890": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1891": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1892": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1893": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "ADD",
      "path": "0"
    },
    "1894": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1901": {
      "op": "SHL"
    },
    "1902": {
      "op": "SUB"
    },
    "1903": {
      "offset": [
        153,
        178
      ],
      "op": "AND",
      "path": "0"
    },
    "1904": {
      "fn": "SimpleBank.transfer",
      "offset": [
        153,
        178
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1905": {
      "op": "POP"
    },
    "1906": {
      "offset": [
        153,
        178
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1907": {
      "fn": "SimpleBank.transfer",
      "jump": "o",
      "offset": [
        153,
        178
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1908": {
      "op": "JUMPDEST"
    },
    "1909": {
      "op": "DUP3"
    },
    "1910": {
      "op": "DUP1"
    },
    "1911": {
      "op": "SLOAD"
    },
    "1912": {
      "op": "DUP3"
    },
    "1913": {
      "op": "DUP3"
    },
    "1914": {
      "op": "SSTORE"
    },
    "1915": {
      "op": "SWAP1"
    },
    "1916": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1918": {
      "op": "MSTORE"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1923": {
      "op": "KECCAK256"
    },
    "1924": {
      "op": "SWAP1"
    },
    "1925": {
      "op": "DUP2"
    },
    "1926": {
      "op": "ADD"
    },
    "1927": {
      "op": "SWAP3"
    },
    "1928": {
      "op": "DUP3"
    },
    "1929": {
      "op": "ISZERO"
    },
    "1930": {
      "op": "PUSH2",
      "value": "0x7C9"
    },
    "1933": {
      "op": "JUMPI"
    },
    "1934": {
      "op": "SWAP2"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1937": {
      "op": "MUL"
    },
    "1938": {
      "op": "DUP3"
    },
    "1939": {
      "op": "ADD"
    },
    "1940": {
      "op": "JUMPDEST"
    },
    "1941": {
      "op": "DUP3"
    },
    "1942": {
      "op": "DUP2"
    },
    "1943": {
      "op": "GT"
    },
    "1944": {
      "op": "ISZERO"
    },
    "1945": {
      "op": "PUSH2",
      "value": "0x7C9"
    },
    "1948": {
      "op": "JUMPI"
    },
    "1949": {
      "op": "DUP3"
    },
    "1950": {
      "op": "MLOAD"
    },
    "1951": {
      "op": "DUP3"
    },
    "1952": {
      "op": "SLOAD"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1959": {
      "op": "SHL"
    },
    "1960": {
      "op": "SUB"
    },
    "1961": {
      "op": "NOT"
    },
    "1962": {
      "op": "AND"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1969": {
      "op": "SHL"
    },
    "1970": {
      "op": "SUB"
    },
    "1971": {
      "op": "SWAP1"
    },
    "1972": {
      "op": "SWAP2"
    },
    "1973": {
      "op": "AND"
    },
    "1974": {
      "op": "OR"
    },
    "1975": {
      "op": "DUP3"
    },
    "1976": {
      "op": "SSTORE"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1979": {
      "op": "SWAP1"
    },
    "1980": {
      "op": "SWAP3"
    },
    "1981": {
      "op": "ADD"
    },
    "1982": {
      "op": "SWAP2"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1985": {
      "op": "SWAP1"
    },
    "1986": {
      "op": "SWAP2"
    },
    "1987": {
      "op": "ADD"
    },
    "1988": {
      "op": "SWAP1"
    },
    "1989": {
      "op": "PUSH2",
      "value": "0x794"
    },
    "1992": {
      "op": "JUMP"
    },
    "1993": {
      "op": "JUMPDEST"
    },
    "1994": {
      "op": "POP"
    },
    "1995": {
      "op": "PUSH2",
      "value": "0x7D5"
    },
    "1998": {
      "op": "SWAP3"
    },
    "1999": {
      "op": "SWAP2"
    },
    "2000": {
      "op": "POP"
    },
    "2001": {
      "op": "PUSH2",
      "value": "0x7D9"
    },
    "2004": {
      "jump": "i",
      "op": "JUMP"
    },
    "2005": {
      "op": "JUMPDEST"
    },
    "2006": {
      "op": "POP"
    },
    "2007": {
      "op": "SWAP1"
    },
    "2008": {
      "jump": "o",
      "op": "JUMP"
    },
    "2009": {
      "op": "JUMPDEST"
    },
    "2010": {
      "op": "JUMPDEST"
    },
    "2011": {
      "op": "DUP1"
    },
    "2012": {
      "op": "DUP3"
    },
    "2013": {
      "op": "GT"
    },
    "2014": {
      "op": "ISZERO"
    },
    "2015": {
      "op": "PUSH2",
      "value": "0x7D5"
    },
    "2018": {
      "op": "JUMPI"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2021": {
      "op": "DUP2"
    },
    "2022": {
      "op": "SSTORE"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2025": {
      "op": "ADD"
    },
    "2026": {
      "op": "PUSH2",
      "value": "0x7DA"
    },
    "2029": {
      "op": "JUMP"
    },
    "2030": {
      "op": "JUMPDEST"
    },
    "2031": {
      "op": "DUP1"
    },
    "2032": {
      "op": "CALLDATALOAD"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2039": {
      "op": "SHL"
    },
    "2040": {
      "op": "SUB"
    },
    "2041": {
      "op": "DUP2"
    },
    "2042": {
      "op": "AND"
    },
    "2043": {
      "op": "DUP2"
    },
    "2044": {
      "op": "EQ"
    },
    "2045": {
      "op": "PUSH2",
      "value": "0x805"
    },
    "2048": {
      "op": "JUMPI"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2051": {
      "op": "DUP1"
    },
    "2052": {
      "op": "REVERT"
    },
    "2053": {
      "op": "JUMPDEST"
    },
    "2054": {
      "op": "SWAP2"
    },
    "2055": {
      "op": "SWAP1"
    },
    "2056": {
      "op": "POP"
    },
    "2057": {
      "jump": "o",
      "op": "JUMP"
    },
    "2058": {
      "op": "JUMPDEST"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2063": {
      "op": "DUP3"
    },
    "2064": {
      "op": "DUP5"
    },
    "2065": {
      "op": "SUB"
    },
    "2066": {
      "op": "SLT"
    },
    "2067": {
      "op": "ISZERO"
    },
    "2068": {
      "op": "PUSH2",
      "value": "0x81C"
    },
    "2071": {
      "op": "JUMPI"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2074": {
      "op": "DUP1"
    },
    "2075": {
      "op": "REVERT"
    },
    "2076": {
      "op": "JUMPDEST"
    },
    "2077": {
      "op": "PUSH2",
      "value": "0x825"
    },
    "2080": {
      "op": "DUP3"
    },
    "2081": {
      "op": "PUSH2",
      "value": "0x7EE"
    },
    "2084": {
      "jump": "i",
      "op": "JUMP"
    },
    "2085": {
      "op": "JUMPDEST"
    },
    "2086": {
      "op": "SWAP4"
    },
    "2087": {
      "op": "SWAP3"
    },
    "2088": {
      "op": "POP"
    },
    "2089": {
      "op": "POP"
    },
    "2090": {
      "op": "POP"
    },
    "2091": {
      "jump": "o",
      "op": "JUMP"
    },
    "2092": {
      "op": "JUMPDEST"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2097": {
      "op": "DUP3"
    },
    "2098": {
      "op": "DUP5"
    },
    "2099": {
      "op": "SUB"
    },
    "2100": {
      "op": "SLT"
    },
    "2101": {
      "op": "ISZERO"
    },
    "2102": {
      "op": "PUSH2",
      "value": "0x83E"
    },
    "2105": {
      "op": "JUMPI"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2108": {
      "op": "DUP1"
    },
    "2109": {
      "op": "REVERT"
    },
    "2110": {
      "op": "JUMPDEST"
    },
    "2111": {
      "op": "POP"
    },
    "2112": {
      "op": "CALLDATALOAD"
    },
    "2113": {
      "op": "SWAP2"
    },
    "2114": {
      "op": "SWAP1"
    },
    "2115": {
      "op": "POP"
    },
    "2116": {
      "jump": "o",
      "op": "JUMP"
    },
    "2117": {
      "op": "JUMPDEST"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2120": {
      "op": "DUP1"
    },
    "2121": {
      "op": "DUP3"
    },
    "2122": {
      "op": "MSTORE"
    },
    "2123": {
      "op": "DUP4"
    },
    "2124": {
      "op": "MLOAD"
    },
    "2125": {
      "op": "SWAP1"
    },
    "2126": {
      "op": "DUP3"
    },
    "2127": {
      "op": "ADD"
    },
    "2128": {
      "op": "DUP2"
    },
    "2129": {
      "op": "SWAP1"
    },
    "2130": {
      "op": "MSTORE"
    },
    "2131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2133": {
      "op": "SWAP1"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2136": {
      "op": "SWAP1"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2139": {
      "op": "DUP5"
    },
    "2140": {
      "op": "ADD"
    },
    "2141": {
      "op": "SWAP1"
    },
    "2142": {
      "op": "DUP3"
    },
    "2143": {
      "op": "DUP8"
    },
    "2144": {
      "op": "ADD"
    },
    "2145": {
      "op": "DUP5"
    },
    "2146": {
      "op": "JUMPDEST"
    },
    "2147": {
      "op": "DUP3"
    },
    "2148": {
      "op": "DUP2"
    },
    "2149": {
      "op": "LT"
    },
    "2150": {
      "op": "ISZERO"
    },
    "2151": {
      "op": "PUSH2",
      "value": "0x887"
    },
    "2154": {
      "op": "JUMPI"
    },
    "2155": {
      "op": "DUP2"
    },
    "2156": {
      "op": "MLOAD"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2161": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2163": {
      "op": "SHL"
    },
    "2164": {
      "op": "SUB"
    },
    "2165": {
      "op": "AND"
    },
    "2166": {
      "op": "DUP5"
    },
    "2167": {
      "op": "MSTORE"
    },
    "2168": {
      "op": "SWAP3"
    },
    "2169": {
      "op": "DUP5"
    },
    "2170": {
      "op": "ADD"
    },
    "2171": {
      "op": "SWAP3"
    },
    "2172": {
      "op": "SWAP1"
    },
    "2173": {
      "op": "DUP5"
    },
    "2174": {
      "op": "ADD"
    },
    "2175": {
      "op": "SWAP1"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2178": {
      "op": "ADD"
    },
    "2179": {
      "op": "PUSH2",
      "value": "0x862"
    },
    "2182": {
      "op": "JUMP"
    },
    "2183": {
      "op": "JUMPDEST"
    },
    "2184": {
      "op": "POP"
    },
    "2185": {
      "op": "POP"
    },
    "2186": {
      "op": "POP"
    },
    "2187": {
      "op": "DUP4"
    },
    "2188": {
      "op": "DUP2"
    },
    "2189": {
      "op": "SUB"
    },
    "2190": {
      "op": "DUP3"
    },
    "2191": {
      "op": "DUP6"
    },
    "2192": {
      "op": "ADD"
    },
    "2193": {
      "op": "MSTORE"
    },
    "2194": {
      "op": "DUP5"
    },
    "2195": {
      "op": "MLOAD"
    },
    "2196": {
      "op": "DUP1"
    },
    "2197": {
      "op": "DUP3"
    },
    "2198": {
      "op": "MSTORE"
    },
    "2199": {
      "op": "DUP6"
    },
    "2200": {
      "op": "DUP4"
    },
    "2201": {
      "op": "ADD"
    },
    "2202": {
      "op": "SWAP2"
    },
    "2203": {
      "op": "DUP4"
    },
    "2204": {
      "op": "ADD"
    },
    "2205": {
      "op": "SWAP1"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2208": {
      "op": "JUMPDEST"
    },
    "2209": {
      "op": "DUP2"
    },
    "2210": {
      "op": "DUP2"
    },
    "2211": {
      "op": "LT"
    },
    "2212": {
      "op": "ISZERO"
    },
    "2213": {
      "op": "PUSH2",
      "value": "0x8BC"
    },
    "2216": {
      "op": "JUMPI"
    },
    "2217": {
      "op": "DUP4"
    },
    "2218": {
      "op": "MLOAD"
    },
    "2219": {
      "op": "DUP4"
    },
    "2220": {
      "op": "MSTORE"
    },
    "2221": {
      "op": "SWAP3"
    },
    "2222": {
      "op": "DUP5"
    },
    "2223": {
      "op": "ADD"
    },
    "2224": {
      "op": "SWAP3"
    },
    "2225": {
      "op": "SWAP2"
    },
    "2226": {
      "op": "DUP5"
    },
    "2227": {
      "op": "ADD"
    },
    "2228": {
      "op": "SWAP2"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2231": {
      "op": "ADD"
    },
    "2232": {
      "op": "PUSH2",
      "value": "0x8A0"
    },
    "2235": {
      "op": "JUMP"
    },
    "2236": {
      "op": "JUMPDEST"
    },
    "2237": {
      "op": "POP"
    },
    "2238": {
      "op": "SWAP1"
    },
    "2239": {
      "op": "SWAP8"
    },
    "2240": {
      "op": "SWAP7"
    },
    "2241": {
      "op": "POP"
    },
    "2242": {
      "op": "POP"
    },
    "2243": {
      "op": "POP"
    },
    "2244": {
      "op": "POP"
    },
    "2245": {
      "op": "POP"
    },
    "2246": {
      "op": "POP"
    },
    "2247": {
      "op": "POP"
    },
    "2248": {
      "jump": "o",
      "op": "JUMP"
    },
    "2249": {
      "op": "JUMPDEST"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2252": {
      "op": "DUP1"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2255": {
      "op": "DUP4"
    },
    "2256": {
      "op": "DUP6"
    },
    "2257": {
      "op": "SUB"
    },
    "2258": {
      "op": "SLT"
    },
    "2259": {
      "op": "ISZERO"
    },
    "2260": {
      "op": "PUSH2",
      "value": "0x8DC"
    },
    "2263": {
      "op": "JUMPI"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2266": {
      "op": "DUP1"
    },
    "2267": {
      "op": "REVERT"
    },
    "2268": {
      "op": "JUMPDEST"
    },
    "2269": {
      "op": "PUSH2",
      "value": "0x8E5"
    },
    "2272": {
      "op": "DUP4"
    },
    "2273": {
      "op": "PUSH2",
      "value": "0x7EE"
    },
    "2276": {
      "jump": "i",
      "op": "JUMP"
    },
    "2277": {
      "op": "JUMPDEST"
    },
    "2278": {
      "op": "SWAP5"
    },
    "2279": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2281": {
      "op": "SWAP4"
    },
    "2282": {
      "op": "SWAP1"
    },
    "2283": {
      "op": "SWAP4"
    },
    "2284": {
      "op": "ADD"
    },
    "2285": {
      "op": "CALLDATALOAD"
    },
    "2286": {
      "op": "SWAP4"
    },
    "2287": {
      "op": "POP"
    },
    "2288": {
      "op": "POP"
    },
    "2289": {
      "op": "POP"
    },
    "2290": {
      "jump": "o",
      "op": "JUMP"
    },
    "2291": {
      "op": "JUMPDEST"
    },
    "2292": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2299": {
      "op": "SHL"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2302": {
      "op": "MSTORE"
    },
    "2303": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2305": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2307": {
      "op": "MSTORE"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2312": {
      "op": "REVERT"
    },
    "2313": {
      "op": "JUMPDEST"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2316": {
      "op": "DUP2"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2319": {
      "op": "NOT"
    },
    "2320": {
      "op": "DIV"
    },
    "2321": {
      "op": "DUP4"
    },
    "2322": {
      "op": "GT"
    },
    "2323": {
      "op": "DUP3"
    },
    "2324": {
      "op": "ISZERO"
    },
    "2325": {
      "op": "ISZERO"
    },
    "2326": {
      "op": "AND"
    },
    "2327": {
      "op": "ISZERO"
    },
    "2328": {
      "op": "PUSH2",
      "value": "0x923"
    },
    "2331": {
      "op": "JUMPI"
    },
    "2332": {
      "op": "PUSH2",
      "value": "0x923"
    },
    "2335": {
      "op": "PUSH2",
      "value": "0x8F3"
    },
    "2338": {
      "jump": "i",
      "op": "JUMP"
    },
    "2339": {
      "op": "JUMPDEST"
    },
    "2340": {
      "op": "POP"
    },
    "2341": {
      "op": "MUL"
    },
    "2342": {
      "op": "SWAP1"
    },
    "2343": {
      "jump": "o",
      "op": "JUMP"
    },
    "2344": {
      "op": "JUMPDEST"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2347": {
      "op": "DUP3"
    },
    "2348": {
      "op": "PUSH2",
      "value": "0x945"
    },
    "2351": {
      "op": "JUMPI"
    },
    "2352": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2359": {
      "op": "SHL"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2362": {
      "op": "MSTORE"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2367": {
      "op": "MSTORE"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2372": {
      "op": "REVERT"
    },
    "2373": {
      "op": "JUMPDEST"
    },
    "2374": {
      "op": "POP"
    },
    "2375": {
      "op": "DIV"
    },
    "2376": {
      "op": "SWAP1"
    },
    "2377": {
      "jump": "o",
      "op": "JUMP"
    },
    "2378": {
      "op": "JUMPDEST"
    },
    "2379": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2386": {
      "op": "SHL"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2389": {
      "op": "MSTORE"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2394": {
      "op": "MSTORE"
    },
    "2395": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2399": {
      "op": "REVERT"
    },
    "2400": {
      "op": "JUMPDEST"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2405": {
      "op": "NOT"
    },
    "2406": {
      "op": "DUP3"
    },
    "2407": {
      "op": "EQ"
    },
    "2408": {
      "op": "ISZERO"
    },
    "2409": {
      "op": "PUSH2",
      "value": "0x974"
    },
    "2412": {
      "op": "JUMPI"
    },
    "2413": {
      "op": "PUSH2",
      "value": "0x974"
    },
    "2416": {
      "op": "PUSH2",
      "value": "0x8F3"
    },
    "2419": {
      "jump": "i",
      "op": "JUMP"
    },
    "2420": {
      "op": "JUMPDEST"
    },
    "2421": {
      "op": "POP"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2424": {
      "op": "ADD"
    },
    "2425": {
      "op": "SWAP1"
    },
    "2426": {
      "jump": "o",
      "op": "JUMP"
    },
    "2427": {
      "op": "JUMPDEST"
    },
    "2428": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2435": {
      "op": "SHL"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2438": {
      "op": "MSTORE"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2443": {
      "op": "MSTORE"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2448": {
      "op": "REVERT"
    },
    "2449": {
      "op": "JUMPDEST"
    },
    "2450": {
      "op": "DUP1"
    },
    "2451": {
      "op": "MLOAD"
    },
    "2452": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "2463": {
      "op": "DUP2"
    },
    "2464": {
      "op": "AND"
    },
    "2465": {
      "op": "DUP2"
    },
    "2466": {
      "op": "EQ"
    },
    "2467": {
      "op": "PUSH2",
      "value": "0x805"
    },
    "2470": {
      "op": "JUMPI"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2473": {
      "op": "DUP1"
    },
    "2474": {
      "op": "REVERT"
    },
    "2475": {
      "op": "JUMPDEST"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2478": {
      "op": "DUP1"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2481": {
      "op": "DUP1"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2486": {
      "op": "DUP7"
    },
    "2487": {
      "op": "DUP9"
    },
    "2488": {
      "op": "SUB"
    },
    "2489": {
      "op": "SLT"
    },
    "2490": {
      "op": "ISZERO"
    },
    "2491": {
      "op": "PUSH2",
      "value": "0x9C3"
    },
    "2494": {
      "op": "JUMPI"
    },
    "2495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2497": {
      "op": "DUP1"
    },
    "2498": {
      "op": "REVERT"
    },
    "2499": {
      "op": "JUMPDEST"
    },
    "2500": {
      "op": "PUSH2",
      "value": "0x9CC"
    },
    "2503": {
      "op": "DUP7"
    },
    "2504": {
      "op": "PUSH2",
      "value": "0x991"
    },
    "2507": {
      "jump": "i",
      "op": "JUMP"
    },
    "2508": {
      "op": "JUMPDEST"
    },
    "2509": {
      "op": "SWAP5"
    },
    "2510": {
      "op": "POP"
    },
    "2511": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2513": {
      "op": "DUP7"
    },
    "2514": {
      "op": "ADD"
    },
    "2515": {
      "op": "MLOAD"
    },
    "2516": {
      "op": "SWAP4"
    },
    "2517": {
      "op": "POP"
    },
    "2518": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2520": {
      "op": "DUP7"
    },
    "2521": {
      "op": "ADD"
    },
    "2522": {
      "op": "MLOAD"
    },
    "2523": {
      "op": "SWAP3"
    },
    "2524": {
      "op": "POP"
    },
    "2525": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2527": {
      "op": "DUP7"
    },
    "2528": {
      "op": "ADD"
    },
    "2529": {
      "op": "MLOAD"
    },
    "2530": {
      "op": "SWAP2"
    },
    "2531": {
      "op": "POP"
    },
    "2532": {
      "op": "PUSH2",
      "value": "0x9EF"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2537": {
      "op": "DUP8"
    },
    "2538": {
      "op": "ADD"
    },
    "2539": {
      "op": "PUSH2",
      "value": "0x991"
    },
    "2542": {
      "jump": "i",
      "op": "JUMP"
    },
    "2543": {
      "op": "JUMPDEST"
    },
    "2544": {
      "op": "SWAP1"
    },
    "2545": {
      "op": "POP"
    },
    "2546": {
      "op": "SWAP3"
    },
    "2547": {
      "op": "SWAP6"
    },
    "2548": {
      "op": "POP"
    },
    "2549": {
      "op": "SWAP3"
    },
    "2550": {
      "op": "SWAP6"
    },
    "2551": {
      "op": "SWAP1"
    },
    "2552": {
      "op": "SWAP4"
    },
    "2553": {
      "op": "POP"
    },
    "2554": {
      "jump": "o",
      "op": "JUMP"
    },
    "2555": {
      "op": "JUMPDEST"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2564": {
      "op": "SHL"
    },
    "2565": {
      "op": "SUB"
    },
    "2566": {
      "op": "DUP2"
    },
    "2567": {
      "op": "DUP5"
    },
    "2568": {
      "op": "SGT"
    },
    "2569": {
      "op": "DUP3"
    },
    "2570": {
      "op": "DUP5"
    },
    "2571": {
      "op": "SGT"
    },
    "2572": {
      "op": "DUP1"
    },
    "2573": {
      "op": "DUP3"
    },
    "2574": {
      "op": "AND"
    },
    "2575": {
      "op": "DUP7"
    },
    "2576": {
      "op": "DUP5"
    },
    "2577": {
      "op": "DIV"
    },
    "2578": {
      "op": "DUP7"
    },
    "2579": {
      "op": "GT"
    },
    "2580": {
      "op": "AND"
    },
    "2581": {
      "op": "ISZERO"
    },
    "2582": {
      "op": "PUSH2",
      "value": "0xA21"
    },
    "2585": {
      "op": "JUMPI"
    },
    "2586": {
      "op": "PUSH2",
      "value": "0xA21"
    },
    "2589": {
      "op": "PUSH2",
      "value": "0x8F3"
    },
    "2592": {
      "jump": "i",
      "op": "JUMP"
    },
    "2593": {
      "op": "JUMPDEST"
    },
    "2594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2596": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2598": {
      "op": "SHL"
    },
    "2599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2601": {
      "op": "DUP8"
    },
    "2602": {
      "op": "SLT"
    },
    "2603": {
      "op": "DUP3"
    },
    "2604": {
      "op": "DUP2"
    },
    "2605": {
      "op": "AND"
    },
    "2606": {
      "op": "DUP8"
    },
    "2607": {
      "op": "DUP4"
    },
    "2608": {
      "op": "SDIV"
    },
    "2609": {
      "op": "DUP10"
    },
    "2610": {
      "op": "SLT"
    },
    "2611": {
      "op": "AND"
    },
    "2612": {
      "op": "ISZERO"
    },
    "2613": {
      "op": "PUSH2",
      "value": "0xA40"
    },
    "2616": {
      "op": "JUMPI"
    },
    "2617": {
      "op": "PUSH2",
      "value": "0xA40"
    },
    "2620": {
      "op": "PUSH2",
      "value": "0x8F3"
    },
    "2623": {
      "jump": "i",
      "op": "JUMP"
    },
    "2624": {
      "op": "JUMPDEST"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2627": {
      "op": "DUP8"
    },
    "2628": {
      "op": "SLT"
    },
    "2629": {
      "op": "SWAP3"
    },
    "2630": {
      "op": "POP"
    },
    "2631": {
      "op": "DUP8"
    },
    "2632": {
      "op": "DUP3"
    },
    "2633": {
      "op": "SDIV"
    },
    "2634": {
      "op": "DUP8"
    },
    "2635": {
      "op": "SLT"
    },
    "2636": {
      "op": "DUP5"
    },
    "2637": {
      "op": "DUP5"
    },
    "2638": {
      "op": "AND"
    },
    "2639": {
      "op": "AND"
    },
    "2640": {
      "op": "ISZERO"
    },
    "2641": {
      "op": "PUSH2",
      "value": "0xA5C"
    },
    "2644": {
      "op": "JUMPI"
    },
    "2645": {
      "op": "PUSH2",
      "value": "0xA5C"
    },
    "2648": {
      "op": "PUSH2",
      "value": "0x8F3"
    },
    "2651": {
      "jump": "i",
      "op": "JUMP"
    },
    "2652": {
      "op": "JUMPDEST"
    },
    "2653": {
      "op": "DUP8"
    },
    "2654": {
      "op": "DUP6"
    },
    "2655": {
      "op": "SDIV"
    },
    "2656": {
      "op": "DUP8"
    },
    "2657": {
      "op": "SLT"
    },
    "2658": {
      "op": "DUP2"
    },
    "2659": {
      "op": "DUP5"
    },
    "2660": {
      "op": "AND"
    },
    "2661": {
      "op": "AND"
    },
    "2662": {
      "op": "ISZERO"
    },
    "2663": {
      "op": "PUSH2",
      "value": "0xA72"
    },
    "2666": {
      "op": "JUMPI"
    },
    "2667": {
      "op": "PUSH2",
      "value": "0xA72"
    },
    "2670": {
      "op": "PUSH2",
      "value": "0x8F3"
    },
    "2673": {
      "jump": "i",
      "op": "JUMP"
    },
    "2674": {
      "op": "JUMPDEST"
    },
    "2675": {
      "op": "POP"
    },
    "2676": {
      "op": "POP"
    },
    "2677": {
      "op": "POP"
    },
    "2678": {
      "op": "SWAP3"
    },
    "2679": {
      "op": "SWAP1"
    },
    "2680": {
      "op": "SWAP4"
    },
    "2681": {
      "op": "MUL"
    },
    "2682": {
      "op": "SWAP4"
    },
    "2683": {
      "op": "SWAP3"
    },
    "2684": {
      "op": "POP"
    },
    "2685": {
      "op": "POP"
    },
    "2686": {
      "op": "POP"
    },
    "2687": {
      "jump": "o",
      "op": "JUMP"
    },
    "2688": {
      "op": "JUMPDEST"
    },
    "2689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2691": {
      "op": "DUP3"
    },
    "2692": {
      "op": "NOT"
    },
    "2693": {
      "op": "DUP3"
    },
    "2694": {
      "op": "GT"
    },
    "2695": {
      "op": "ISZERO"
    },
    "2696": {
      "op": "PUSH2",
      "value": "0xA93"
    },
    "2699": {
      "op": "JUMPI"
    },
    "2700": {
      "op": "PUSH2",
      "value": "0xA93"
    },
    "2703": {
      "op": "PUSH2",
      "value": "0x8F3"
    },
    "2706": {
      "jump": "i",
      "op": "JUMP"
    },
    "2707": {
      "op": "JUMPDEST"
    },
    "2708": {
      "op": "POP"
    },
    "2709": {
      "op": "ADD"
    },
    "2710": {
      "op": "SWAP1"
    },
    "2711": {
      "jump": "o",
      "op": "JUMP"
    },
    "2712": {
      "op": "JUMPDEST"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2715": {
      "op": "DUP3"
    },
    "2716": {
      "op": "DUP3"
    },
    "2717": {
      "op": "LT"
    },
    "2718": {
      "op": "ISZERO"
    },
    "2719": {
      "op": "PUSH2",
      "value": "0xAAA"
    },
    "2722": {
      "op": "JUMPI"
    },
    "2723": {
      "op": "PUSH2",
      "value": "0xAAA"
    },
    "2726": {
      "op": "PUSH2",
      "value": "0x8F3"
    },
    "2729": {
      "jump": "i",
      "op": "JUMP"
    },
    "2730": {
      "op": "JUMPDEST"
    },
    "2731": {
      "op": "POP"
    },
    "2732": {
      "op": "SUB"
    },
    "2733": {
      "op": "SWAP1"
    },
    "2734": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "289ee3d4050f7b54df5c5544e8786c6711363313",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.6 <0.9.0;\nimport \"interfaces/AggregatorV3Interface.sol\";\n\ncontract SimpleBank {\n  address owner;\n  address[] public accounts;\n  uint256 public usdEntryFee;\n  AggregatorV3Interface public priceFeed;\n  mapping(address => uint256) public balances;\n\n  constructor(address _priceFeed) public {\n    priceFeed = AggregatorV3Interface(_priceFeed);\n    owner = msg.sender;\n    balances[msg.sender] = 1000;\n  }\n\n  function transfer(address receiver, uint256 amt) public {\n    require(balances[msg.sender] >= amt, \"not enough balances\");\n    require(msg.sender != receiver, \"not enough balances\");\n    balances[msg.sender] -= amt;\n    balances[receiver] += amt;\n  }\n\n  function getListAccountAndBalaces() public view returns(address[] memory,uint256[] memory){\n    uint256[] memory balanceOfAccount = new uint256[](accounts.length);\n    for(uint256 i = 0 ; i < accounts.length ; i++){\n      balanceOfAccount[i] = balances[accounts[i]];\n    }\n    return (accounts,balanceOfAccount);\n  }\n  function depositToSC() public payable {\n    uint flag = 1;\n    uint256 minimumUSD = 50 * 10**18;\n    require(\n      getConversionRate(msg.value) >= minimumUSD,\n      \"You need to donate more ETH!\"\n    );\n    balances[msg.sender] += msg.value;\n    // example\n    // addressToAmountFunded[0xab] = 1 ETH\n    // addressToAmountFunded[0xcd] = 1 ETH\n    for (uint256 i = 0; i < accounts.length; i++) {\n      address account = accounts[i];\n      if(account == msg.sender){\n        flag = 0;\n      }\n    }\n    if(flag == 1){\n      accounts.push(msg.sender);\n    }\n  }\n\n  // 10^18 eth -> USD\n  function getPrice() public view returns (uint256) {\n    (, int256 answer, , , ) = priceFeed.latestRoundData();\n    return uint256(answer * 10000000000);\n    // 4259 912137930 000000000\n  }\n\n  function getConversionRate(uint256 ethAmouth) public view returns (uint256) {\n    uint256 ethPrice = getPrice();\n    uint256 ethAmountInUsd = (ethPrice * ethAmouth) / 1000000000000000000;\n    return ethAmountInUsd;\n  }\n\n  // return EntraceFee (wei)\n  function getEntranceFee() public view returns (uint256) {\n    uint256 minimumUSD = 50 * 10**18;\n    uint256 price = getPrice();\n    uint256 precision = 10**18;\n    return (minimumUSD * precision) / price;\n  }\n\n  modifier onlyOwner() {\n    require(msg.sender == owner, \"you're not owner\");\n    _;\n  }\n\n  function withdraw() public payable onlyOwner {\n    payable(msg.sender).transfer(address(this).balance); // transfer from address(this) to msg.sender (address.this is this contract)\n    for (uint256 i = 0; i < accounts.length; i++) {\n      address account = accounts[i];\n      balances[account] = 0;\n    }\n    accounts = new address[](0);\n  }\n\n}\n",
  "sourceMap": "112:2594:0:-:0;;;302:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;347:9;:45;;-1:-1:-1;;;;;347:45:0;;;-1:-1:-1;;;;;;347:45:0;;;;;;:9;398:18;;;;;406:10;398:18;;;;;422:20;;:8;:20;;;;;445:4;422:27;;112:2594;;14:290:2;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:2;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:2:o;:::-;112:2594:0;;;;;;",
  "sourcePath": "contracts/SimpleBank.sol",
  "type": "contract"
}